{
  "serviceName": "Amazon EC2",
  "servicePrefix": "ec2",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html",
  "actions": [
    {
      "name": "AcceptReservedInstancesExchangeQuote",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptReservedInstancesExchangeQuote.html",
      "description": "Grants permission to accept a Convertible Reserved Instance exchange quote",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "AcceptTransitGatewayMulticastDomainAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayMulticastDomainAssociations.html",
      "description": "Grants permission to accept a request to associate subnets with a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment",
        "transit-gateway-multicast-domain"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AcceptTransitGatewayPeeringAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayPeeringAttachment.html",
      "description": "Grants permission to accept a transit gateway peering attachment request",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AcceptTransitGatewayVpcAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayVpcAttachment.html",
      "description": "Grants permission to accept a request to attach a VPC to a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AcceptVpcEndpointConnections",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcEndpointConnections.html",
      "description": "Grants permission to accept one or more interface VPC endpoint connections to your VPC endpoint service",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AcceptVpcPeeringConnection",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcPeeringConnection.html",
      "description": "Grants permission to accept a VPC peering connection request",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*",
        "vpc-peering-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:AccepterVpc",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AdvertiseByoipCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AdvertiseByoipCidr.html",
      "description": "Grants permission to advertise an IP address range that is provisioned for use in AWS through bring your own IP addresses (BYOIP)",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "AllocateAddress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateAddress.html",
      "description": "Grants permission to allocate an Elastic IP address (EIP) to your account",
      "accessLevel": "Write",
      "resourceTypes": [
        "elastic-ip*",
        "ipv4pool-ec2"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "AllocateHosts",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateHosts.html",
      "description": "Grants permission to allocate a Dedicated Host to your account",
      "accessLevel": "Write",
      "resourceTypes": [
        "dedicated-host*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AutoPlacement",
        "ec2:AvailabilityZone",
        "ec2:HostRecovery",
        "ec2:InstanceType",
        "ec2:Quantity",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "AllocateIpamPoolCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateIpamPoolCidr.html",
      "description": "Grants permission to allocate a CIDR from an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ApplySecurityGroupsToClientVpnTargetNetwork",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ApplySecurityGroupsToClientVpnTargetNetwork.html",
      "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*",
        "security-group*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AssignIpv6Addresses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignIpv6Addresses.html",
      "description": "Grants permission to assign one or more IPv6 addresses to a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "AssignPrivateIpAddresses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignPrivateIpAddresses.html",
      "description": "Grants permission to assign one or more secondary private IP addresses to a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateAddress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateAddress.html",
      "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "elastic-ip",
        "instance",
        "network-interface"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateClientVpnTargetNetwork",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateClientVpnTargetNetwork.html",
      "description": "Grants permission to associate a target network with a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*",
        "subnet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateDhcpOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateDhcpOptions.html",
      "description": "Grants permission to associate or disassociate a set of DHCP options with a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "dhcp-options*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateEnclaveCertificateIamRole",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateEnclaveCertificateIamRole.html",
      "description": "Grants permission to associate an ACM certificate with an IAM role to be used in an EC2 Enclave",
      "accessLevel": "Write",
      "resourceTypes": [
        "certificate*",
        "role*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "AssociateIamInstanceProfile",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html",
      "description": "Grants permission to associate an IAM instance profile with a running or stopped instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:NewInstanceProfile",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "iam:PassRole"
      ]
    },
    {
      "name": "AssociateInstanceEventWindow",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateInstanceEventWindow.html",
      "description": "Grants permission to associate one or more targets with an event window",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance-event-window*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateRouteTable.html",
      "description": "Grants permission to associate a subnet or gateway with a route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*",
        "internet-gateway",
        "subnet",
        "vpn-gateway"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateSubnetCidrBlock",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateSubnetCidrBlock.html",
      "description": "Grants permission to associate a CIDR block with a subnet",
      "accessLevel": "Write",
      "resourceTypes": [
        "subnet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateTransitGatewayMulticastDomain",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayMulticastDomain.html",
      "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "subnet*",
        "transit-gateway-attachment*",
        "transit-gateway-multicast-domain*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateTransitGatewayRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayRouteTable.html",
      "description": "Grants permission to associate an attachment with a transit gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*",
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AssociateTrunkInterface",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTrunkInterface.html",
      "description": "Grants permission to associate a branch network interface with a trunk network interface",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "AssociateVpcCidrBlock",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateVpcCidrBlock.html",
      "description": "Grants permission to associate a CIDR block with a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*",
        "ipam-pool",
        "ipv6pool-ec2"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Ipv4IpamPoolId",
        "ec2:Ipv6IpamPoolId",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AttachClassicLinkVpc",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachClassicLinkVpc.html",
      "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "security-group*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "AttachInternetGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway.html",
      "description": "Grants permission to attach an internet gateway to a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "internet-gateway*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "AttachNetworkInterface",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachNetworkInterface.html",
      "description": "Grants permission to attach a network interface to an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "AttachVolume",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVolume.html",
      "description": "Grants permission to attach an EBS volume to a running or stopped instance and expose it to the instance with the specified device name",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "volume*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "AttachVpnGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVpnGateway.html",
      "description": "Grants permission to attach a virtual private gateway to a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*",
        "vpn-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "AuthorizeClientVpnIngress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeClientVpnIngress.html",
      "description": "Grants permission to add an inbound authorization rule to a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "AuthorizeSecurityGroupEgress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html",
      "description": "Grants permission to add one or more outbound rules to a VPC security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "AuthorizeSecurityGroupIngress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html",
      "description": "Grants permission to add one or more inbound rules to a security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "BundleInstance",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BundleInstance.html",
      "description": "Grants permission to bundle an instance store-backed Windows instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CancelBundleTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelBundleTask.html",
      "description": "Grants permission to cancel a bundling operation",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CancelCapacityReservation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservation.html",
      "description": "Grants permission to cancel a Capacity Reservation and release the reserved capacity",
      "accessLevel": "Write",
      "resourceTypes": [
        "capacity-reservation*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:CapacityReservationFleet",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CancelCapacityReservationFleets",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservationFleets.html",
      "description": "Grants permission to cancel one or more Capacity Reservation Fleets",
      "accessLevel": "Write",
      "resourceTypes": [
        "capacity-reservation-fleet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CancelConversionTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelConversionTask.html",
      "description": "Grants permission to cancel an active conversion task",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CancelExportTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelExportTask.html",
      "description": "Grants permission to cancel an active export task",
      "accessLevel": "Write",
      "resourceTypes": [
        "export-image-task",
        "export-instance-task"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CancelImportTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelImportTask.html",
      "description": "Grants permission to cancel an in-process import virtual machine or import snapshot task",
      "accessLevel": "Write",
      "resourceTypes": [
        "import-image-task",
        "import-snapshot-task"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CancelReservedInstancesListing",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelReservedInstancesListing.html",
      "description": "Grants permission to cancel a Reserved Instance listing on the Reserved Instance Marketplace",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CancelSpotFleetRequests",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests.html",
      "description": "Grants permission to cancel one or more Spot Fleet requests",
      "accessLevel": "Write",
      "resourceTypes": [
        "spot-fleet-request*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CancelSpotInstanceRequests",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotInstanceRequests.html",
      "description": "Grants permission to cancel one or more Spot Instance requests",
      "accessLevel": "Write",
      "resourceTypes": [
        "spot-instances-request*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ConfirmProductInstance",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ConfirmProductInstance.html",
      "description": "Grants permission to determine whether an owned product code is associated with an instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CopyFpgaImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyFpgaImage.html",
      "description": "Grants permission to copy a source Amazon FPGA image (AFI) to the current Region. Resource-level permissions specified for this action apply to the new AFI only. They do not apply to the source AFI",
      "accessLevel": "Write",
      "resourceTypes": [
        "fpga-image*"
      ],
      "conditionKeys": [
        "ec2:Owner",
        "ec2:Region"
      ],
      "dependentActions": []
    },
    {
      "name": "CopyImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyImage.html",
      "description": "Grants permission to copy an Amazon Machine Image (AMI) from a source Region to the current Region. Resource-level permissions specified for this action apply to the new AMI only. They do not apply to the source AMI",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "ec2:Owner",
        "ec2:Region"
      ],
      "dependentActions": []
    },
    {
      "name": "CopySnapshot",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopySnapshot.html",
      "description": "Grants permission to copy a point-in-time snapshot of an EBS volume and store it in Amazon S3. Resource-level permissions specified for this action apply to the new snapshot only. They do not apply to the source snapshot",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:OutpostArn",
        "ec2:Region",
        "ec2:SourceOutpostArn"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateCapacityReservation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservation.html",
      "description": "Grants permission to create a Capacity Reservation",
      "accessLevel": "Write",
      "resourceTypes": [
        "capacity-reservation*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:CapacityReservationFleet",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateCapacityReservationFleet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservationFleet.html",
      "description": "Grants permission to create a Capacity Reservation Fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "capacity-reservation-fleet*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateCarrierGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCarrierGateway.html",
      "description": "Grants permission to create a carrier gateway and provides CSP connectivity to VPC customers",
      "accessLevel": "Write",
      "resourceTypes": [
        "carrier-gateway*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateClientVpnEndpoint",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnEndpoint.html",
      "description": "Grants permission to create a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*",
        "security-group",
        "vpc"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateClientVpnRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnRoute.html",
      "description": "Grants permission to add a network route to a Client VPN endpoint's route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*",
        "subnet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateCoipPoolPermission",
      "documentationUrl": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
      "description": "Grants permission to allow a service to access a customer owned IP (CoIP) pool",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateCustomerGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway.html",
      "description": "Grants permission to create a customer gateway, which provides information to AWS about your customer gateway device",
      "accessLevel": "Write",
      "resourceTypes": [
        "customer-gateway*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateDefaultSubnet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDefaultSubnet.html",
      "description": "Grants permission to create a default subnet in a specified Availability Zone in a default VPC",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateDefaultVpc",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDefaultVpc.html",
      "description": "Grants permission to create a default VPC with a default subnet in each Availability Zone",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateDhcpOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDhcpOptions.html",
      "description": "Grants permission to create a set of DHCP options for a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "dhcp-options*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateEgressOnlyInternetGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateEgressOnlyInternetGateway.html",
      "description": "Grants permission to create an egress-only internet gateway for a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "egress-only-internet-gateway*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateFleet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
      "description": "Grants permission to launch an EC2 Fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*",
        "instance*",
        "image",
        "key-pair",
        "launch-template",
        "network-interface",
        "placement-group",
        "security-group",
        "snapshot",
        "subnet"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:ResourceTag/${TagKey}",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateFlowLogs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html",
      "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-flow-log*",
        "network-interface",
        "subnet",
        "vpc"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags",
        "iam:PassRole"
      ]
    },
    {
      "name": "CreateFpgaImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFpgaImage.html",
      "description": "Grants permission to create an Amazon FPGA Image (AFI) from a design checkpoint (DCP)",
      "accessLevel": "Write",
      "resourceTypes": [
        "fpga-image*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html",
      "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*",
        "instance*",
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Owner",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:SnapshotTime",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateInstanceEventWindow",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceEventWindow.html",
      "description": "Grants permission to create an event window in which scheduled events for the associated Amazon EC2 instances can run",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance-event-window*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateInstanceExportTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceExportTask.html",
      "description": "Grants permission to export a running or stopped instance to an Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "export-instance-task*",
        "instance*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateInternetGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway.html",
      "description": "Grants permission to create an internet gateway for a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "internet-gateway*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateIpam",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpam.html",
      "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateIpamPool",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamPool.html",
      "description": "Grants permission to create an IP address pool for Amazon VPC IP Address Manager (IPAM), which is a collection of contiguous IP address CIDRs",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*",
        "ipam-scope*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateIpamScope",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamScope.html",
      "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM) scope, which is the highest-level container within IPAM",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam*",
        "ipam-scope*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateKeyPair",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html",
      "description": "Grants permission to create a 2048-bit RSA key pair",
      "accessLevel": "Write",
      "resourceTypes": [
        "key-pair*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:KeyPairType",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateLaunchTemplate",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html",
      "description": "Grants permission to create a launch template",
      "accessLevel": "Write",
      "resourceTypes": [
        "launch-template*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateLaunchTemplateVersion",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html",
      "description": "Grants permission to create a new version of a launch template",
      "accessLevel": "Write",
      "resourceTypes": [
        "launch-template*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateLocalGatewayRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRoute.html",
      "description": "Grants permission to create a static route for a local gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "local-gateway-route-table*",
        "local-gateway-virtual-interface-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateLocalGatewayRouteTablePermission",
      "documentationUrl": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
      "description": "Grants permission to allow a service to access a local gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "local-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateLocalGatewayRouteTableVpcAssociation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVpcAssociation.html",
      "description": "Grants permission to associate a VPC with a local gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "local-gateway-route-table*",
        "local-gateway-route-table-vpc-association*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateManagedPrefixList",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateManagedPrefixList.html",
      "description": "Grants permission to create a managed prefix list",
      "accessLevel": "Write",
      "resourceTypes": [
        "prefix-list*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateNatGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNatGateway.html",
      "description": "Grants permission to create a NAT gateway in a subnet",
      "accessLevel": "Write",
      "resourceTypes": [
        "natgateway*",
        "subnet*",
        "elastic-ip"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateNetworkAcl",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html",
      "description": "Grants permission to create a network ACL in a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-acl*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateNetworkAclEntry",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html",
      "description": "Grants permission to create a numbered entry (a rule) in a network ACL",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-acl*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateNetworkInsightsAccessScope",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsAccessScope.html",
      "description": "Grants permission to create a Network Access Scope",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-access-scope*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateNetworkInsightsPath",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
      "description": "Grants permission to create a path to analyze for reachability",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-path*",
        "instance",
        "internet-gateway",
        "network-interface",
        "transit-gateway",
        "vpc-endpoint",
        "vpc-peering-connection",
        "vpn-gateway"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AccepterVpc",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateNetworkInterface",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html",
      "description": "Grants permission to create a network interface in a subnet",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*",
        "subnet*",
        "security-group"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateNetworkInterfacePermission",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterfacePermission.html",
      "description": "Grants permission to create a permission for an AWS-authorized user to perform certain operations on a network interface",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AuthorizedService",
        "ec2:AuthorizedUser",
        "ec2:AvailabilityZone",
        "ec2:Permission",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "CreatePlacementGroup",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePlacementGroup.html",
      "description": "Grants permission to create a placement group",
      "accessLevel": "Write",
      "resourceTypes": [
        "placement-group*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:PlacementGroupStrategy",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreatePublicIpv4Pool",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePublicIpv4Pool.html",
      "description": "Grants permission to create a public IPv4 address pool for public IPv4 CIDRs that you own and bring to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-access-scope*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateReplaceRootVolumeTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReplaceRootVolumeTask.html",
      "description": "Grants permission to create a root volume replacement task",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "replace-root-volume-task*",
        "volume*",
        "snapshot"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateReservedInstancesListing",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReservedInstancesListing.html",
      "description": "Grants permission to create a listing for Standard Reserved Instances to be sold in the Reserved Instance Marketplace",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateRestoreImageTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRestoreImageTask.html",
      "description": "Grants permission to start a task that restores an AMI from an S3 object previously created by using CreateStoreImageTask",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Owner",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html",
      "description": "Grants permission to create a route in a VPC route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable.html",
      "description": "Grants permission to create a route table for a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateSecurityGroup",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html",
      "description": "Grants permission to create a security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*",
        "vpc"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateSnapshot",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshot.html",
      "description": "Grants permission to create a snapshot of an EBS volume and store it in Amazon S3",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*",
        "volume*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:OutpostArn",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:Encrypted",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateSnapshots",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html",
      "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "snapshot*",
        "volume*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:OutpostArn",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:Encrypted",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateSpotDatafeedSubscription",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSpotDatafeedSubscription.html",
      "description": "Grants permission to create a data feed for Spot Instances to view Spot Instance usage logs",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateStoreImageTask",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html",
      "description": "Grants permission to store an AMI as a single object in an S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateSubnet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnet.html",
      "description": "Grants permission to create a subnet in a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "subnet*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateSubnetCidrReservation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnetCidrReservation.html",
      "description": "Grants permission to create a subnet CIDR reservation",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateTags",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
      "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "capacity-reservation",
        "capacity-reservation-fleet",
        "client-vpn-endpoint",
        "customer-gateway",
        "dedicated-host",
        "dhcp-options",
        "egress-only-internet-gateway",
        "elastic-gpu",
        "elastic-ip",
        "export-image-task",
        "export-instance-task",
        "fleet",
        "fpga-image",
        "host-reservation",
        "image",
        "import-image-task",
        "import-snapshot-task",
        "instance",
        "instance-event-window",
        "internet-gateway",
        "ipam",
        "ipam-pool",
        "ipam-scope",
        "ipv4pool-ec2",
        "ipv6pool-ec2",
        "key-pair",
        "launch-template",
        "local-gateway",
        "local-gateway-route-table",
        "local-gateway-route-table-virtual-interface-group-association",
        "local-gateway-route-table-vpc-association",
        "local-gateway-virtual-interface",
        "local-gateway-virtual-interface-group",
        "natgateway",
        "network-acl",
        "network-insights-access-scope",
        "network-insights-access-scope-analysis",
        "network-interface",
        "placement-group",
        "prefix-list",
        "replace-root-volume-task",
        "reserved-instances",
        "route-table",
        "security-group",
        "security-group-rule",
        "snapshot",
        "spot-fleet-request",
        "spot-instances-request",
        "subnet",
        "traffic-mirror-filter",
        "traffic-mirror-session",
        "traffic-mirror-target",
        "transit-gateway",
        "transit-gateway-attachment",
        "transit-gateway-connect-peer",
        "transit-gateway-multicast-domain",
        "transit-gateway-route-table",
        "volume",
        "vpc",
        "vpc-endpoint",
        "vpc-endpoint-service",
        "vpc-flow-log",
        "vpc-peering-connection",
        "vpn-connection",
        "vpn-gateway"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AutoPlacement",
        "ec2:AvailabilityZone",
        "ec2:HostRecovery",
        "ec2:InstanceType",
        "ec2:Quantity",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:ElasticGpuType",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AuthorizedUser",
        "ec2:AvailabilityZone",
        "ec2:Permission",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:InstanceType",
        "ec2:Region",
        "ec2:ReservedInstancesOfferingType",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpceServicePrivateDnsName",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AccepterVpc",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AuthenticationType",
        "ec2:DPDTimeoutSeconds",
        "ec2:GatewayType",
        "ec2:IKEVersions",
        "ec2:InsideTunnelCidr",
        "ec2:InsideTunnelIpv6Cidr",
        "ec2:Phase1DHGroup",
        "ec2:Phase1EncryptionAlgorithms",
        "ec2:Phase1IntegrityAlgorithms",
        "ec2:Phase1LifetimeSeconds",
        "ec2:Phase2DHGroup",
        "ec2:Phase2EncryptionAlgorithms",
        "ec2:Phase2IntegrityAlgorithms",
        "ec2:Phase2LifetimeSeconds",
        "ec2:PreSharedKeys",
        "ec2:Region",
        "ec2:RekeyFuzzPercentage",
        "ec2:RekeyMarginTimeSeconds",
        "ec2:ReplayWindowSizePackets",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RoutingType",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:CreateAction"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateTrafficMirrorFilter",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.html",
      "description": "Grants permission to create a traffic mirror filter",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-filter*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTrafficMirrorFilterRule",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.html",
      "description": "Grants permission to create a traffic mirror filter rule",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-filter*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateTrafficMirrorSession",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.html",
      "description": "Grants permission to create a traffic mirror session",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*",
        "traffic-mirror-filter*",
        "traffic-mirror-session*",
        "traffic-mirror-target*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTrafficMirrorTarget",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorTarget.html",
      "description": "Grants permission to create a traffic mirror target",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-target*",
        "network-interface"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTransitGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGateway.html",
      "description": "Grants permission to create a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTransitGatewayConnect",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnect.html",
      "description": "Grants permission to create a Connect attachment from a specified transit gateway attachment",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTransitGatewayConnectPeer",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnectPeer.html",
      "description": "Grants permission to create a Connect peer between a transit gateway and an appliance",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*",
        "transit-gateway-connect-peer*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTransitGatewayMulticastDomain",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayMulticastDomain.html",
      "description": "Grants permission to create a multicast domain for a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway*",
        "transit-gateway-multicast-domain*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTransitGatewayPeeringAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPeeringAttachment.html",
      "description": "Grants permission to request a transit gateway peering attachment between a requester and accepter transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway*",
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTransitGatewayPrefixListReference",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPrefixListReference.html",
      "description": "Grants permission to create a transit gateway prefix list reference",
      "accessLevel": "Write",
      "resourceTypes": [
        "prefix-list*",
        "transit-gateway-route-table*",
        "transit-gateway-attachment"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateTransitGatewayRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRoute.html",
      "description": "Grants permission to create a static route for a transit gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-route-table*",
        "transit-gateway-attachment"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateTransitGatewayRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTable.html",
      "description": "Grants permission to create a route table for a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway*",
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateTransitGatewayVpcAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayVpcAttachment.html",
      "description": "Grants permission to attach a VPC to a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway*",
        "transit-gateway-attachment*",
        "vpc*",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateVolume",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html",
      "description": "Grants permission to create an EBS volume",
      "accessLevel": "Write",
      "resourceTypes": [
        "volume*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:KmsKeyId",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateVpc",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpc.html",
      "description": "Grants permission to create a VPC with a specified CIDR block",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*",
        "ipam-pool",
        "ipv6pool-ec2"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Ipv4IpamPoolId",
        "ec2:Ipv6IpamPoolId",
        "ec2:Region",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateVpcEndpoint",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html",
      "description": "Grants permission to create a VPC endpoint for an AWS service",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*",
        "vpc-endpoint*",
        "route-table",
        "security-group",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:VpceServiceName",
        "ec2:VpceServiceOwner",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags",
        "route53:AssociateVPCWithHostedZone"
      ]
    },
    {
      "name": "CreateVpcEndpointConnectionNotification",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html",
      "description": "Grants permission to create a connection notification for a VPC endpoint or VPC endpoint service",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateVpcEndpointServiceConfiguration",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointServiceConfiguration.html",
      "description": "Grants permission to create a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:VpceServicePrivateDnsName"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateVpcPeeringConnection",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcPeeringConnection.html",
      "description": "Grants permission to request a VPC peering connection between two VPCs",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*",
        "vpc-peering-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AccepterVpc",
        "ec2:Region",
        "ec2:RequesterVpc"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateVpnConnection",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html",
      "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "customer-gateway*",
        "vpn-connection*",
        "transit-gateway",
        "vpn-gateway"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AuthenticationType",
        "ec2:DPDTimeoutSeconds",
        "ec2:GatewayType",
        "ec2:IKEVersions",
        "ec2:InsideTunnelCidr",
        "ec2:InsideTunnelIpv6Cidr",
        "ec2:Phase1DHGroup",
        "ec2:Phase1EncryptionAlgorithms",
        "ec2:Phase1IntegrityAlgorithms",
        "ec2:Phase1LifetimeSeconds",
        "ec2:Phase2DHGroup",
        "ec2:Phase2EncryptionAlgorithms",
        "ec2:Phase2IntegrityAlgorithms",
        "ec2:Phase2LifetimeSeconds",
        "ec2:PreSharedKeys",
        "ec2:Region",
        "ec2:RekeyFuzzPercentage",
        "ec2:RekeyMarginTimeSeconds",
        "ec2:ReplayWindowSizePackets",
        "ec2:RoutingType",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "CreateVpnConnectionRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnectionRoute.html",
      "description": "Grants permission to create a static route for a VPN connection between a virtual private gateway and a customer gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "CreateVpnGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnGateway.html",
      "description": "Grants permission to create a virtual private gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-gateway*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "DeleteCarrierGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCarrierGateway.html",
      "description": "Grants permission to delete a carrier gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "carrier-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteClientVpnEndpoint",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnEndpoint.html",
      "description": "Grants permission to delete a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteClientVpnRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnRoute.html",
      "description": "Grants permission to delete a route from a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteCoipPoolPermission",
      "documentationUrl": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
      "description": "Grants permission to deny a service from accessing a customer owned IP (CoIP) pool",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeleteCustomerGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway.html",
      "description": "Grants permission to delete a customer gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "customer-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteDhcpOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteDhcpOptions.html",
      "description": "Grants permission to delete a set of DHCP options",
      "accessLevel": "Write",
      "resourceTypes": [
        "dhcp-options*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteEgressOnlyInternetGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteEgressOnlyInternetGateway.html",
      "description": "Grants permission to delete an egress-only internet gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "egress-only-internet-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteFleets",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFleets.html",
      "description": "Grants permission to delete one or more EC2 Fleets",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteFlowLogs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html",
      "description": "Grants permission to delete one or more flow logs",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-flow-log*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteFpgaImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFpgaImage.html",
      "description": "Grants permission to delete an Amazon FPGA Image (AFI)",
      "accessLevel": "Write",
      "resourceTypes": [
        "fpga-image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteInstanceEventWindow",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInstanceEventWindow.html",
      "description": "Grants permission to delete the specified event window",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance-event-window*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteInternetGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway.html",
      "description": "Grants permission to delete an internet gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "internet-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteIpam",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpam.html",
      "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) and remove all monitored data associated with the IPAM including the historical data for CIDRs",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteIpamPool",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamPool.html",
      "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteIpamScope",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamScope.html",
      "description": "Grants permission to delete the scope for an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-scope*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteKeyPair",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteKeyPair.html",
      "description": "Grants permission to delete a  key pair by removing the public key from Amazon EC2",
      "accessLevel": "Write",
      "resourceTypes": [
        "key-pair"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteLaunchTemplate",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplate.html",
      "description": "Grants permission to delete a launch template and its associated versions",
      "accessLevel": "Write",
      "resourceTypes": [
        "launch-template*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteLaunchTemplateVersions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplateVersions.html",
      "description": "Grants permission to delete one or more versions of a launch template",
      "accessLevel": "Write",
      "resourceTypes": [
        "launch-template*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteLocalGatewayRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRoute.html",
      "description": "Grants permission to delete a route from a local gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "local-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteLocalGatewayRouteTablePermission",
      "documentationUrl": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
      "description": "Grants permission to deny a service from accessing a local gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "local-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteLocalGatewayRouteTableVpcAssociation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRouteTableVpcAssociation.html",
      "description": "Grants permission to delete an association between a VPC and local gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "local-gateway-route-table-vpc-association*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteManagedPrefixList",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteManagedPrefixList.html",
      "description": "Grants permission to delete a managed prefix list",
      "accessLevel": "Write",
      "resourceTypes": [
        "prefix-list*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNatGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNatGateway.html",
      "description": "Grants permission to delete a NAT gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "natgateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkAcl",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html",
      "description": "Grants permission to delete a network ACL",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-acl*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkAclEntry",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html",
      "description": "Grants permission to delete an inbound or outbound entry (rule) from a network ACL",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-acl*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkInsightsAccessScope",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScope.html",
      "description": "Grants permission to delete a Network Access Scope",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-access-scope*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkInsightsAccessScopeAnalysis",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScopeAnalysis.html",
      "description": "Grants permission to delete a Network Access Scope analysis",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-access-scope-analysis*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkInsightsAnalysis",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAnalysis.html",
      "description": "Grants permission to delete a network insights analysis",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-analysis*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkInsightsPath",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsPath.html",
      "description": "Grants permission to delete a network insights path",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-path*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkInterface",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterface.html",
      "description": "Grants permission to delete a detached network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteNetworkInterfacePermission",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterfacePermission.html",
      "description": "Grants permission to delete a permission that is associated with a network interface",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "network-interface"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeletePlacementGroup",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePlacementGroup.html",
      "description": "Grants permission to delete a placement group",
      "accessLevel": "Write",
      "resourceTypes": [
        "placement-group"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeletePublicIpv4Pool",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePublicIpv4Pool.html",
      "description": "Grants permission to delete a public IPv4 address pool for public IPv4 CIDRs that you own and brought to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipv4pool-ec2*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteQueuedReservedInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteQueuedReservedInstances.html",
      "description": "Grants permission to delete the queued purchases for the specified Reserved Instances",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeleteRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html",
      "description": "Grants permission to delete a route from a route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*",
        "prefix-list"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html",
      "description": "Grants permission to delete a route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteSecurityGroup",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html",
      "description": "Grants permission to delete a security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteSnapshot",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSnapshot.html",
      "description": "Grants permission to delete a snapshot of an EBS volume",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteSpotDatafeedSubscription",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSpotDatafeedSubscription.html",
      "description": "Grants permission to delete a data feed for Spot Instances",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeleteSubnet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSubnet.html",
      "description": "Grants permission to delete a subnet",
      "accessLevel": "Write",
      "resourceTypes": [
        "subnet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteSubnetCidrReservation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSubnetCidrReservation.html",
      "description": "Grants permission to delete a subnet CIDR reservation",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeleteTags",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
      "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "capacity-reservation",
        "capacity-reservation-fleet",
        "client-vpn-endpoint",
        "customer-gateway",
        "dedicated-host",
        "dhcp-options",
        "egress-only-internet-gateway",
        "elastic-gpu",
        "elastic-ip",
        "export-image-task",
        "export-instance-task",
        "fleet",
        "fpga-image",
        "host-reservation",
        "image",
        "import-image-task",
        "import-snapshot-task",
        "instance",
        "instance-event-window",
        "internet-gateway",
        "ipam",
        "ipam-pool",
        "ipam-scope",
        "ipv4pool-ec2",
        "ipv6pool-ec2",
        "key-pair",
        "launch-template",
        "local-gateway",
        "local-gateway-route-table",
        "local-gateway-route-table-virtual-interface-group-association",
        "local-gateway-route-table-vpc-association",
        "local-gateway-virtual-interface",
        "local-gateway-virtual-interface-group",
        "natgateway",
        "network-acl",
        "network-insights-access-scope",
        "network-insights-access-scope-analysis",
        "network-interface",
        "placement-group",
        "prefix-list",
        "replace-root-volume-task",
        "reserved-instances",
        "route-table",
        "security-group",
        "security-group-rule",
        "snapshot",
        "spot-fleet-request",
        "spot-instances-request",
        "subnet",
        "traffic-mirror-filter",
        "traffic-mirror-session",
        "traffic-mirror-target",
        "transit-gateway",
        "transit-gateway-attachment",
        "transit-gateway-connect-peer",
        "transit-gateway-multicast-domain",
        "transit-gateway-route-table",
        "volume",
        "vpc",
        "vpc-endpoint",
        "vpc-endpoint-service",
        "vpc-flow-log",
        "vpc-peering-connection",
        "vpn-connection",
        "vpn-gateway"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTrafficMirrorFilter",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilter.html",
      "description": "Grants permission to delete a traffic mirror filter",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-filter*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTrafficMirrorFilterRule",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilterRule.html",
      "description": "Grants permission to delete a traffic mirror filter rule",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-filter*",
        "traffic-mirror-filter-rule*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTrafficMirrorSession",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorSession.html",
      "description": "Grants permission to delete a traffic mirror session",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-session*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTrafficMirrorTarget",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorTarget.html",
      "description": "Grants permission to delete a traffic mirror target",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-target*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGateway.html",
      "description": "Grants permission to delete a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayConnect",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnect.html",
      "description": "Grants permission to delete a transit gateway connect attachment",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayConnectPeer",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnectPeer.html",
      "description": "Grants permission to delete a transit gateway connect peer",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-connect-peer*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayMulticastDomain",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayMulticastDomain.html",
      "description": "Grants permission to delete a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-multicast-domain*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayPeeringAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPeeringAttachment.html",
      "description": "Grants permission to delete a peering attachment from a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayPrefixListReference",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPrefixListReference.html",
      "description": "Grants permission to delete a transit gateway prefix list reference",
      "accessLevel": "Write",
      "resourceTypes": [
        "prefix-list*",
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRoute.html",
      "description": "Grants permission to delete a route from a transit gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRouteTable.html",
      "description": "Grants permission to delete a transit gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteTransitGatewayVpcAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayVpcAttachment.html",
      "description": "Grants permission to delete a VPC attachment from a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVolume",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVolume.html",
      "description": "Grants permission to delete an EBS volume",
      "accessLevel": "Write",
      "resourceTypes": [
        "volume*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpc",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpc.html",
      "description": "Grants permission to delete a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpcEndpointConnectionNotifications",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointConnectionNotifications.html",
      "description": "Grants permission to delete one or more VPC endpoint connection notifications",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint",
        "vpc-endpoint-service"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpcEndpointServiceConfigurations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointServiceConfigurations.html",
      "description": "Grants permission to delete one or more VPC endpoint service configurations",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpcEndpoints",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpoints.html",
      "description": "Grants permission to delete one or more VPC endpoints",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpceServiceName"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpcPeeringConnection",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcPeeringConnection.html",
      "description": "Grants permission to delete a VPC peering connection",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-peering-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AccepterVpc",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpnConnection",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnection.html",
      "description": "Grants permission to delete a VPN connection",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpnConnectionRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnectionRoute.html",
      "description": "Grants permission to delete a static route for a VPN connection between a virtual private gateway and a customer gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteVpnGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnGateway.html",
      "description": "Grants permission to delete a virtual private gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeprovisionByoipCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionByoipCidr.html",
      "description": "Grants permission to release an IP address range that was provisioned through bring your own IP addresses (BYOIP), and to delete the corresponding address pool",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeprovisionIpamPoolCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionIpamPoolCidr.html",
      "description": "Grants permission to deprovision a CIDR provisioned from an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeprovisionPublicIpv4PoolCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionPublicIpv4PoolCidr.html",
      "description": "Grants permission to deprovision a CIDR from a public IPv4 pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipv4pool-ec2*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeregisterImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterImage.html",
      "description": "Grants permission to deregister an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "DeregisterInstanceEventNotificationAttributes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterInstanceEventNotificationAttributes.html",
      "description": "Grants permission to remove tags from the set of tags to include in notifications about scheduled events for your instances",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeregisterTransitGatewayMulticastGroupMembers",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupMembers.html",
      "description": "Grants permission to deregister one or more network interface members from a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface",
        "transit-gateway-multicast-domain"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DeregisterTransitGatewayMulticastGroupSources",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupSources.html",
      "description": "Grants permission to deregister one or more network interface sources from a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface",
        "transit-gateway-multicast-domain"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeAccountAttributes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAccountAttributes.html",
      "description": "Grants permission to describe the attributes of the AWS account",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeAddresses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddresses.html",
      "description": "Grants permission to describe one or more Elastic IP addresses",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeAddressesAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddressesAttribute.html",
      "description": "Grants permission to describe the attributes of the specified Elastic IP addresses",
      "accessLevel": "List",
      "resourceTypes": [
        "elastic-ip"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeAggregateIdFormat",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAggregateIdFormat.html",
      "description": "Grants permission to describe the longer ID format settings for all resource types",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeAvailabilityZones",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html",
      "description": "Grants permission to describe one or more of the Availability Zones that are available to you",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeBundleTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeBundleTasks.html",
      "description": "Grants permission to describe one or more bundling tasks",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeByoipCidrs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeByoipCidrs.html",
      "description": "Grants permission to describe the IP address ranges that were provisioned through bring your own IP addresses (BYOIP)",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeCapacityReservationFleets",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCapacityReservationFleets.html",
      "description": "Grants permission to describe one or more Capacity Reservation Fleets",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeCapacityReservations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCapacityReservations.html",
      "description": "Grants permission to describe one or more Capacity Reservations",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeCarrierGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCarrierGateways.html",
      "description": "Grants permission to describe one or more Carrier Gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeClassicLinkInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClassicLinkInstances.html",
      "description": "Grants permission to describe one or more linked EC2-Classic instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeClientVpnAuthorizationRules",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnAuthorizationRules.html",
      "description": "Grants permission to describe the authorization rules for a Client VPN endpoint",
      "accessLevel": "List",
      "resourceTypes": [
        "client-vpn-endpoint"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeClientVpnConnections",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnConnections.html",
      "description": "Grants permission to describe active client connections and connections that have been terminated within the last 60 minutes for a Client VPN endpoint",
      "accessLevel": "List",
      "resourceTypes": [
        "client-vpn-endpoint"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeClientVpnEndpoints",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnEndpoints.html",
      "description": "Grants permission to describe one or more Client VPN endpoints",
      "accessLevel": "List",
      "resourceTypes": [
        "client-vpn-endpoint"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeClientVpnRoutes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnRoutes.html",
      "description": "Grants permission to describe the routes for a Client VPN endpoint",
      "accessLevel": "List",
      "resourceTypes": [
        "client-vpn-endpoint"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeClientVpnTargetNetworks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnTargetNetworks.html",
      "description": "Grants permission to describe the target networks that are associated with a Client VPN endpoint",
      "accessLevel": "List",
      "resourceTypes": [
        "client-vpn-endpoint"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeCoipPools",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html",
      "description": "Grants permission to describe the specified customer-owned address pools or all of your customer-owned address pools",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeConversionTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeConversionTasks.html",
      "description": "Grants permission to describe one or more conversion tasks",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeCustomerGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html",
      "description": "Grants permission to describe one or more customer gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeDhcpOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeDhcpOptions.html",
      "description": "Grants permission to describe one or more DHCP options sets",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeEgressOnlyInternetGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeEgressOnlyInternetGateways.html",
      "description": "Grants permission to describe one or more egress-only internet gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeElasticGpus",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeElasticGpus.html",
      "description": "Grants permission to describe an Elastic Graphics accelerator that is associated with an instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeExportImageTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeExportImageTasks.html",
      "description": "Grants permission to describe one or more export image tasks",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeExportTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeExportTasks.html",
      "description": "Grants permission to describe one or more export instance tasks",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeFastLaunchImages",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFastLaunchImages.html",
      "description": "Grants permission to describe fast-launch enabled Windows AMIs",
      "accessLevel": "Read",
      "resourceTypes": [
        "image"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeFastSnapshotRestores",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFastSnapshotRestores.html",
      "description": "Grants permission to describe the state of fast snapshot restores for snapshots",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeFleetHistory",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetHistory.html",
      "description": "Grants permission to describe the events for an EC2 Fleet during a specified time",
      "accessLevel": "List",
      "resourceTypes": [
        "fleet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeFleetInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetInstances.html",
      "description": "Grants permission to describe the running instances for an EC2 Fleet",
      "accessLevel": "List",
      "resourceTypes": [
        "fleet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeFleets",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleets.html",
      "description": "Grants permission to describe one or more EC2 Fleets",
      "accessLevel": "List",
      "resourceTypes": [
        "fleet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeFlowLogs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFlowLogs.html",
      "description": "Grants permission to describe one or more flow logs",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeFpgaImageAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFpgaImageAttribute.html",
      "description": "Grants permission to describe the attributes of an Amazon FPGA Image (AFI)",
      "accessLevel": "List",
      "resourceTypes": [
        "fpga-image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute/${AttributeName}",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeFpgaImages",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFpgaImages.html",
      "description": "Grants permission to describe one or more Amazon FPGA Images (AFIs)",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeHostReservationOfferings",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHostReservationOfferings.html",
      "description": "Grants permission to describe the Dedicated Host Reservations that are available to purchase",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeHostReservations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHostReservations.html",
      "description": "Grants permission to describe the Dedicated Host Reservations that are associated with Dedicated Hosts in the AWS account",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeHosts",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHosts.html",
      "description": "Grants permission to describe one or more Dedicated Hosts",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeIamInstanceProfileAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIamInstanceProfileAssociations.html",
      "description": "Grants permission to describe the IAM instance profile associations",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeIdFormat",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIdFormat.html",
      "description": "Grants permission to describe the ID format settings for resources",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeIdentityIdFormat",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIdentityIdFormat.html",
      "description": "Grants permission to describe the ID format settings for resources for an IAM user, IAM role, or root user",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeImageAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html",
      "description": "Grants permission to describe an attribute of an Amazon Machine Image (AMI)",
      "accessLevel": "List",
      "resourceTypes": [
        "image"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeImages",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html",
      "description": "Grants permission to describe one or more images (AMIs, AKIs, and ARIs)",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeImportImageTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImportImageTasks.html",
      "description": "Grants permission to describe import virtual machine or import snapshot tasks",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeImportSnapshotTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImportSnapshotTasks.html",
      "description": "Grants permission to describe import snapshot tasks",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInstanceAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceAttribute.html",
      "description": "Grants permission to describe the attributes of an instance",
      "accessLevel": "List",
      "resourceTypes": [
        "instance"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeInstanceCreditSpecifications",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceCreditSpecifications.html",
      "description": "Grants permission to describe the credit option for CPU usage of one or more burstable performance instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInstanceEventNotificationAttributes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceEventNotificationAttributes.html",
      "description": "Grants permission to describe the set of tags to include in notifications about scheduled events for your instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInstanceEventWindows",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceEventWindows.html",
      "description": "Grants permission to describe the specified event windows or all event windows",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInstanceStatus",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceStatus.html",
      "description": "Grants permission to describe the status of one or more instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInstanceTypeOfferings",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html",
      "description": "Grants permission to describe the set of instance types that are offered in a location",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInstanceTypes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypes.html",
      "description": "Grants permission to describe the details of instance types that are offered in a location",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html",
      "description": "Grants permission to describe one or more instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeInternetGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html",
      "description": "Grants permission to describe one or more internet gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeIpamPools",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpamPools.html",
      "description": "Grants permission to describe Amazon VPC IP Address Manager (IPAM) pools",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeIpamScopes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpamScopes.html",
      "description": "Grants permission to describe Amazon VPC IP Address Manager (IPAM) scopes",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeIpams",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpams.html",
      "description": "Grants permission to describe an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeIpv6Pools",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpv6Pools.html",
      "description": "Grants permission to describe one or more IPv6 address pools",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeKeyPairs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html",
      "description": "Grants permission to describe one or more key pairs",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLaunchTemplateVersions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html",
      "description": "Grants permission to describe one or more launch template versions",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLaunchTemplates",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html",
      "description": "Grants permission to describe one or more launch templates",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLocalGatewayRouteTablePermissions",
      "documentationUrl": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
      "description": "Grants permission to allow a service to describe a local gateway route table",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations.html",
      "description": "Grants permission to describe the associations between virtual interface groups and local gateway route tables",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLocalGatewayRouteTableVpcAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTableVpcAssociations.html",
      "description": "Grants permission to describe an association between VPCs and local gateway route tables",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLocalGatewayRouteTables",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html",
      "description": "Grants permission to describe one or more local gateway route tables",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLocalGatewayVirtualInterfaceGroups",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaceGroups.html",
      "description": "Grants permission to describe local gateway virtual interface groups",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLocalGatewayVirtualInterfaces",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaces.html",
      "description": "Grants permission to describe local gateway virtual interfaces",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeLocalGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html",
      "description": "Grants permission to describe one or more local gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeManagedPrefixLists",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html",
      "description": "Grants permission to describe your managed prefix lists and any AWS-managed prefix lists",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeMovingAddresses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeMovingAddresses.html",
      "description": "Grants permission to describe Elastic IP addresses that are being moved to the EC2-VPC platform",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNatGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html",
      "description": "Grants permission to describe one or more NAT gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkAcls",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html",
      "description": "Grants permission to describe one or more network ACLs",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkInsightsAccessScopeAnalyses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAccessScopeAnalyses.html",
      "description": "Grants permission to describe one or more Network Access Scope analyses",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkInsightsAccessScopes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAccessScopes.html",
      "description": "Grants permission to describe the Network Access Scopes",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkInsightsAnalyses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html",
      "description": "Grants permission to describe one or more network insights analyses",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkInsightsPaths",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsPaths.html",
      "description": "Grants permission to describe one or more network insights paths",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkInterfaceAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaceAttribute.html",
      "description": "Grants permission to describe a network interface attribute",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkInterfacePermissions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfacePermissions.html",
      "description": "Grants permission to describe the permissions that are associated with a network interface",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeNetworkInterfaces",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html",
      "description": "Grants permission to describe one or more network interfaces",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribePlacementGroups",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePlacementGroups.html",
      "description": "Grants permission to describe one or more placement groups",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribePrefixLists",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html",
      "description": "Grants permission to describe available AWS services in a prefix list format",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribePrincipalIdFormat",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrincipalIdFormat.html",
      "description": "Grants permission to describe the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribePublicIpv4Pools",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html",
      "description": "Grants permission to describe one or more IPv4 address pools",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeRegions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html",
      "description": "Grants permission to describe one or more AWS Regions that are currently available in your account",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeReplaceRootVolumeTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReplaceRootVolumeTasks.html",
      "description": "Grants permission to describe a root volume replacement task",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeReservedInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstances.html",
      "description": "Grants permission to describe one or more purchased Reserved Instances in your account",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeReservedInstancesListings",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesListings.html",
      "description": "Grants permission to describe your account's Reserved Instance listings in the Reserved Instance Marketplace",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeReservedInstancesModifications",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesModifications.html",
      "description": "Grants permission to describe the modifications made to one or more Reserved Instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeReservedInstancesOfferings",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesOfferings.html",
      "description": "Grants permission to describe the Reserved Instance offerings that are available for purchase",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeRouteTables",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html",
      "description": "Grants permission to describe one or more route tables",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeScheduledInstanceAvailability",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeScheduledInstanceAvailability.html",
      "description": "Grants permission to find available schedules for Scheduled Instances",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeScheduledInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeScheduledInstances.html",
      "description": "Grants permission to describe one or more Scheduled Instances in your account",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSecurityGroupReferences",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupReferences.html",
      "description": "Grants permission to describe the VPCs on the other side of a VPC peering connection that are referencing specified VPC security groups",
      "accessLevel": "List",
      "resourceTypes": [
        "security-group"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeSecurityGroupRules",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupRules.html",
      "description": "Grants permission to describe one or more of your security group rules",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSecurityGroups",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html",
      "description": "Grants permission to describe one or more security groups",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSnapshotAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshotAttribute.html",
      "description": "Grants permission to describe an attribute of a snapshot",
      "accessLevel": "List",
      "resourceTypes": [
        "snapshot"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeSnapshotTierStatus",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshotTierStatus.html",
      "description": "Grants permission to describe the storage tier status for Amazon EBS snapshots",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSnapshots",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html",
      "description": "Grants permission to describe one or more EBS snapshots",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSpotDatafeedSubscription",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotDatafeedSubscription.html",
      "description": "Grants permission to describe the data feed for Spot Instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSpotFleetInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetInstances.html",
      "description": "Grants permission to describe the running instances for a Spot Fleet",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSpotFleetRequestHistory",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetRequestHistory.html",
      "description": "Grants permission to describe the events for a Spot Fleet request during a specified time",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSpotFleetRequests",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetRequests.html",
      "description": "Grants permission to describe one or more Spot Fleet requests",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSpotInstanceRequests",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotInstanceRequests.html",
      "description": "Grants permission to describe one or more Spot Instance requests",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeSpotPriceHistory",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotPriceHistory.html",
      "description": "Grants permission to describe the Spot Instance price history",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeStaleSecurityGroups",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeStaleSecurityGroups.html",
      "description": "Grants permission to describe the stale security group rules for security groups in a specified VPC",
      "accessLevel": "List",
      "resourceTypes": [
        "vpc"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeStoreImageTasks",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeStoreImageTasks.html",
      "description": "Grants permission to describe the progress of the AMI store tasks",
      "accessLevel": "List",
      "resourceTypes": [
        "image"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeSubnets",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html",
      "description": "Grants permission to describe one or more subnets",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTags",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTags.html",
      "description": "Grants permission to describe one or more tags for an Amazon EC2 resource",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTrafficMirrorFilters",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorFilters.html",
      "description": "Grants permission to describe one or more traffic mirror filters",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTrafficMirrorSessions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorSessions.html",
      "description": "Grants permission to describe one or more traffic mirror sessions",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTrafficMirrorTargets",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorTargets.html",
      "description": "Grants permission to describe one or more traffic mirror targets",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGatewayAttachments",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html",
      "description": "Grants permission to describe one or more attachments between resources and transit gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGatewayConnectPeers",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayConnectPeers.html",
      "description": "Grants permission to describe one or more transit gateway connect peers",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGatewayConnects",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayConnects.html",
      "description": "Grants permission to describe one or more transit gateway connect attachments",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGatewayMulticastDomains",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html",
      "description": "Grants permission to describe one or more transit gateway multicast domains",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGatewayPeeringAttachments",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html",
      "description": "Grants permission to describe one or more transit gateway peering attachments",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGatewayRouteTables",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTables.html",
      "description": "Grants permission to describe one or more transit gateway route tables",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGatewayVpcAttachments",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html",
      "description": "Grants permission to describe one or more VPC attachments on a transit gateway",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTransitGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html",
      "description": "Grants permission to describe one or more transit gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeTrunkInterfaceAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrunkInterfaceAssociations.html",
      "description": "Grants permission to describe one or more network interface trunk associations",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVolumeAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumeAttribute.html",
      "description": "Grants permission to describe an attribute of an EBS volume",
      "accessLevel": "List",
      "resourceTypes": [
        "volume"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:KmsKeyId",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeVolumeStatus",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumeStatus.html",
      "description": "Grants permission to describe the status of one or more EBS volumes",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVolumes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html",
      "description": "Grants permission to describe one or more EBS volumes",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVolumesModifications",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumesModifications.html",
      "description": "Grants permission to describe the current modification status of one or more EBS volumes",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcAttribute.html",
      "description": "Grants permission to describe an attribute of a VPC",
      "accessLevel": "List",
      "resourceTypes": [
        "vpc"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcClassicLink",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcClassicLink.html",
      "description": "Grants permission to describe the ClassicLink status of one or more VPCs",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcClassicLinkDnsSupport",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcClassicLinkDnsSupport.html",
      "description": "Grants permission to describe the ClassicLink DNS support status of one or more VPCs",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcEndpointConnectionNotifications",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointConnectionNotifications.html",
      "description": "Grants permission to describe the connection notifications for VPC endpoints and VPC endpoint services",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcEndpointConnections",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointConnections.html",
      "description": "Grants permission to describe the VPC endpoint connections to your VPC endpoint services",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcEndpointServiceConfigurations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServiceConfigurations.html",
      "description": "Grants permission to describe VPC endpoint service configurations (your services)",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcEndpointServicePermissions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServicePermissions.html",
      "description": "Grants permission to describe the principals (service consumers) that are permitted to discover your VPC endpoint service",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcEndpointServices",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html",
      "description": "Grants permission to describe all supported AWS services that can be specified when creating a VPC endpoint",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcEndpoints",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html",
      "description": "Grants permission to describe one or more VPC endpoints",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcPeeringConnections",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html",
      "description": "Grants permission to describe one or more VPC peering connections",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpcs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html",
      "description": "Grants permission to describe one or more VPCs",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpnConnections",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html",
      "description": "Grants permission to describe one or more VPN connections",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DescribeVpnGateways",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html",
      "description": "Grants permission to describe one or more virtual private gateways",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DetachClassicLinkVpc",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachClassicLinkVpc.html",
      "description": "Grants permission to unlink (detach) a linked EC2-Classic instance from a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DetachInternetGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html",
      "description": "Grants permission to detach an internet gateway from a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "internet-gateway*",
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DetachNetworkInterface",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachNetworkInterface.html",
      "description": "Grants permission to detach a network interface from an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DetachVolume",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVolume.html",
      "description": "Grants permission to detach an EBS volume from an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "volume*",
        "instance"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DetachVpnGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVpnGateway.html",
      "description": "Grants permission to detach a virtual private gateway from a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*",
        "vpn-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DisableEbsEncryptionByDefault",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html",
      "description": "Grants permission to disable EBS encryption by default for your account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DisableFastLaunch",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastLaunch.html",
      "description": "Grants permission to disable faster launching for Windows AMIs",
      "accessLevel": "Write",
      "resourceTypes": [
        "image"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "DisableFastSnapshotRestores",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastSnapshotRestores.html",
      "description": "Grants permission to disable fast snapshot restores for one or more snapshots in specified Availability Zones",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "DisableImageDeprecation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableImageDeprecation.html",
      "description": "Grants permission to cancel the deprecation of the specified AMI",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "DisableIpamOrganizationAdminAccount",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableIpamOrganizationAdminAccount.html",
      "description": "Grants permission to disable an AWS Organizations member account as an Amazon VPC IP Address Manager (IPAM) admin account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": [
        "organizations:DeregisterDelegatedAdministrator"
      ]
    },
    {
      "name": "DisableSerialConsoleAccess",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableSerialConsoleAccess.html",
      "description": "Grants permission to disable access to the EC2 serial console of all instances for your account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DisableTransitGatewayRouteTablePropagation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableTransitGatewayRouteTablePropagation.html",
      "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*",
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DisableVgwRoutePropagation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVgwRoutePropagation.html",
      "description": "Grants permission to disable a virtual private gateway from propagating routes to a specified route table of a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*",
        "vpn-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DisableVpcClassicLink",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLink.html",
      "description": "Grants permission to disable ClassicLink for a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DisableVpcClassicLinkDnsSupport",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLinkDnsSupport.html",
      "description": "Grants permission to disable ClassicLink DNS support for a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateAddress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateAddress.html",
      "description": "Grants permission to disassociate an Elastic IP address from an instance or network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "elastic-ip",
        "network-interface"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateClientVpnTargetNetwork",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateClientVpnTargetNetwork.html",
      "description": "Grants permission to disassociate a target network from a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateEnclaveCertificateIamRole",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateEnclaveCertificateIamRole.html",
      "description": "Grants permission to disassociate an ACM certificate from a IAM role",
      "accessLevel": "Write",
      "resourceTypes": [
        "certificate*",
        "role*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DisassociateIamInstanceProfile",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html",
      "description": "Grants permission to disassociate an IAM instance profile from a running or stopped instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateInstanceEventWindow",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateInstanceEventWindow.html",
      "description": "Grants permission to disassociate one or more targets from an event window",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance-event-window*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html",
      "description": "Grants permission to disassociate a subnet from a route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateSubnetCidrBlock",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateSubnetCidrBlock.html",
      "description": "Grants permission to disassociate a CIDR block from a subnet",
      "accessLevel": "Write",
      "resourceTypes": [
        "subnet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateTransitGatewayMulticastDomain",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayMulticastDomain.html",
      "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "subnet*",
        "transit-gateway-attachment*",
        "transit-gateway-multicast-domain*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateTransitGatewayRouteTable",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayRouteTable.html",
      "description": "Grants permission to disassociate a resource attachment from a transit gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*",
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "DisassociateTrunkInterface",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTrunkInterface.html",
      "description": "Grants permission to disassociate a branch network interface to a trunk network interface",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DisassociateVpcCidrBlock",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateVpcCidrBlock.html",
      "description": "Grants permission to disassociate a CIDR block from a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableEbsEncryptionByDefault",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableEbsEncryptionByDefault.html",
      "description": "Grants permission to enable EBS encryption by default for your account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "EnableFastLaunch",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastLaunch.html",
      "description": "Grants permission to enable faster launching for Windows AMIs",
      "accessLevel": "Write",
      "resourceTypes": [
        "image",
        "launch-template"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableFastSnapshotRestores",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastSnapshotRestores.html",
      "description": "Grants permission to enable fast snapshot restores for one or more snapshots in specified Availability Zones",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableImageDeprecation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableImageDeprecation.html",
      "description": "Grants permission to enable deprecation of the specified AMI at the specified date and time",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableIpamOrganizationAdminAccount",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableIpamOrganizationAdminAccount.html",
      "description": "Grants permission to enable an AWS Organizations member account as an Amazon VPC IP Address Manager (IPAM) admin account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": [
        "iam:CreateServiceLinkedRole",
        "organizations:EnableAWSServiceAccess",
        "organizations:RegisterDelegatedAdministrator"
      ]
    },
    {
      "name": "EnableSerialConsoleAccess",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableSerialConsoleAccess.html",
      "description": "Grants permission to enable access to the EC2 serial console of all instances for your account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "EnableTransitGatewayRouteTablePropagation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html",
      "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*",
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableVgwRoutePropagation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVgwRoutePropagation.html",
      "description": "Grants permission to enable a virtual private gateway to propagate routes to a VPC route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*",
        "vpn-gateway*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableVolumeIO",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVolumeIO.html",
      "description": "Grants permission to enable I/O operations for a volume that had I/O operations disabled",
      "accessLevel": "Write",
      "resourceTypes": [
        "volume*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableVpcClassicLink",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLink.html",
      "description": "Grants permission to enable a VPC for ClassicLink",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "EnableVpcClassicLinkDnsSupport",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLinkDnsSupport.html",
      "description": "Grants permission to enable a VPC to support DNS hostname resolution for ClassicLink",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ExportClientVpnClientCertificateRevocationList",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientCertificateRevocationList.html",
      "description": "Grants permission to download the client certificate revocation list for a Client VPN endpoint",
      "accessLevel": "Read",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "ExportClientVpnClientConfiguration",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientConfiguration.html",
      "description": "Grants permission to download the contents of the Client VPN endpoint configuration file for a Client VPN endpoint",
      "accessLevel": "Read",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "ExportImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportImage.html",
      "description": "Grants permission to export an Amazon Machine Image (AMI) to a VM file",
      "accessLevel": "Write",
      "resourceTypes": [
        "export-image-task*",
        "image*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "ExportTransitGatewayRoutes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportTransitGatewayRoutes.html",
      "description": "Grants permission to export routes from a transit gateway route table to an Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetAssociatedEnclaveCertificateIamRoles",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAssociatedEnclaveCertificateIamRoles.html",
      "description": "Grants permission to get the list of roles associated with an ACM certificate",
      "accessLevel": "Read",
      "resourceTypes": [
        "certificate*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetAssociatedIpv6PoolCidrs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAssociatedIpv6PoolCidrs.html",
      "description": "Grants permission to get information about the IPv6 CIDR block associations for a specified IPv6 address pool",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetCapacityReservationUsage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCapacityReservationUsage.html",
      "description": "Grants permission to get usage information about a Capacity Reservation",
      "accessLevel": "Read",
      "resourceTypes": [
        "capacity-reservation*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:CapacityReservationFleet",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetCoipPoolUsage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCoipPoolUsage.html",
      "description": "Grants permission to describe the allocations from the specified customer-owned address pool",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetConsoleOutput",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html",
      "description": "Grants permission to get the console output for an instance",
      "accessLevel": "Read",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "GetConsoleScreenshot",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleScreenshot.html",
      "description": "Grants permission to retrieve a JPG-format screenshot of a running instance",
      "accessLevel": "Read",
      "resourceTypes": [
        "instance"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:NewInstanceProfile",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "GetDefaultCreditSpecification",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetDefaultCreditSpecification.html",
      "description": "Grants permission to get the default credit option for CPU usage of a burstable performance instance family",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetEbsDefaultKmsKeyId",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html",
      "description": "Grants permission to get the ID of the default customer master key (CMK) for EBS encryption by default",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetEbsEncryptionByDefault",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsEncryptionByDefault.html",
      "description": "Grants permission to describe whether EBS encryption by default is enabled for your account",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetFlowLogsIntegrationTemplate",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetFlowLogsIntegrationTemplate.html",
      "description": "Grants permission to generate a CloudFormation template to streamline the integration of VPC flow logs with Amazon Athena",
      "accessLevel": "Read",
      "resourceTypes": [
        "vpc-flow-log*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetGroupsForCapacityReservation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetGroupsForCapacityReservation.html",
      "description": "Grants permission to list the resource groups to which a Capacity Reservation has been added",
      "accessLevel": "List",
      "resourceTypes": [
        "capacity-reservation*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:CapacityReservationFleet",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetHostReservationPurchasePreview",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetHostReservationPurchasePreview.html",
      "description": "Grants permission to preview a reservation purchase with configurations that match those of a Dedicated Host",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetInstanceTypesFromInstanceRequirements",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html",
      "description": "Grants permission to view a list of instance types with specified instance attributes",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetIpamAddressHistory",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamAddressHistory.html",
      "description": "Grants permission to retrieve historical information about a CIDR within an Amazon VPC IP Address Manager (IPAM) scope",
      "accessLevel": "Read",
      "resourceTypes": [
        "ipam-scope*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetIpamPoolAllocations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolAllocations.html",
      "description": "Grants permission to get a list of all the CIDR allocations in an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Read",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetIpamPoolCidrs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolCidrs.html",
      "description": "Grants permission to get the CIDRs provisioned to an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Read",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetIpamResourceCidrs",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamResourceCidrs.html",
      "description": "Grants permission to get information about the resources in an Amazon VPC IP Address Manager (IPAM) scope",
      "accessLevel": "Read",
      "resourceTypes": [
        "ipam-pool*",
        "ipam-scope*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetLaunchTemplateData",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetLaunchTemplateData.html",
      "description": "Grants permission to get the configuration data of the specified instance for use with a new launch template or launch template version",
      "accessLevel": "Read",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "GetManagedPrefixListAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListAssociations.html",
      "description": "Grants permission to get information about the resources that are associated with the specified managed prefix list",
      "accessLevel": "Read",
      "resourceTypes": [
        "prefix-list*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetManagedPrefixListEntries",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListEntries.html",
      "description": "Grants permission to get information about the entries for a specified managed prefix list",
      "accessLevel": "Read",
      "resourceTypes": [
        "prefix-list*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetNetworkInsightsAccessScopeAnalysisFindings",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetNetworkInsightsAccessScopeAnalysisFindings.html",
      "description": "Grants permission to get the findings for one or more Network Access Scope analyses",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetNetworkInsightsAccessScopeContent",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetNetworkInsightsAccessScopeContent.html",
      "description": "Grants permission to get the content for a specified Network Access Scope",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetPasswordData",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html",
      "description": "Grants permission to retrieve the encrypted administrator password for a running Windows instance",
      "accessLevel": "Read",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "GetReservedInstancesExchangeQuote",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetReservedInstancesExchangeQuote.html",
      "description": "Grants permission to return a quote and exchange information for exchanging one or more Convertible Reserved Instances for a new Convertible Reserved Instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetSerialConsoleAccessStatus",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSerialConsoleAccessStatus.html",
      "description": "Grants permission to retrieve the access status of your account to the EC2 serial console of all instances",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetSpotPlacementScores",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html",
      "description": "Grants permission to calculate the Spot placement score for a Region or Availability Zone based on the specified target capacity and compute requirements",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetSubnetCidrReservations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSubnetCidrReservations.html",
      "description": "Grants permission to retrieve information about the subnet CIDR reservations",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetTransitGatewayAttachmentPropagations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayAttachmentPropagations.html",
      "description": "Grants permission to list the route tables to which a resource attachment propagates routes",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetTransitGatewayMulticastDomainAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayMulticastDomainAssociations.html",
      "description": "Grants permission to get information about the associations for a transit gateway multicast domain",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetTransitGatewayPrefixListReferences",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayPrefixListReference.html",
      "description": "Grants permission to get information about prefix list references for a transit gateway route table",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetTransitGatewayRouteTableAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html",
      "description": "Grants permission to get information about associations for a transit gateway route table",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetTransitGatewayRouteTablePropagations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html",
      "description": "Grants permission to get information about the route table propagations for a transit gateway route table",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetVpnConnectionDeviceSampleConfiguration",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceSampleConfiguration.html",
      "description": "Grants permission to download an AWS-provided sample configuration file to be used with the customer gateway device",
      "accessLevel": "List",
      "resourceTypes": [
        "vpn-connection*",
        "vpn-connection-device-type"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "GetVpnConnectionDeviceTypes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceTypes.html",
      "description": "Grants permission to obtain a list of customer gateway devices for which sample configuration files can be provided",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ImportClientVpnClientCertificateRevocationList",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportClientVpnClientCertificateRevocationList.html",
      "description": "Grants permission to upload a client certificate revocation list to a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "ImportImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html",
      "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*",
        "import-image-task*",
        "snapshot"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:RootDeviceType",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "ImportInstance",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html",
      "description": "Grants permission to create an import instance task using metadata from a disk image",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "volume*",
        "security-group",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ImportKeyPair",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html",
      "description": "Grants permission to import a public key from an RSA key pair that was created with a third-party tool",
      "accessLevel": "Write",
      "resourceTypes": [
        "key-pair*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "ImportSnapshot",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportSnapshot.html",
      "description": "Grants permission to import a disk into an EBS snapshot",
      "accessLevel": "Write",
      "resourceTypes": [
        "import-snapshot-task*",
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "ImportVolume",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportVolume.html",
      "description": "Grants permission to create an import volume task using metadata from a disk image",
      "accessLevel": "Write",
      "resourceTypes": [
        "volume*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "ListSnapshotsInRecycleBin",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ListSnapshotsInRecycleBin.html",
      "description": "Grants permission to list the Amazon EBS snapshots that are currently in the Recycle Bin",
      "accessLevel": "List",
      "resourceTypes": [
        "snapshot"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyAddressAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyAddressAttribute.html",
      "description": "Grants permission to modify an attribute of the specified Elastic IP address",
      "accessLevel": "Write",
      "resourceTypes": [
        "elastic-ip*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyAvailabilityZoneGroup",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyAvailabilityZoneGroup.html",
      "description": "Grants permission to modify  the opt-in status of the Local Zone and Wavelength Zone group for your account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ModifyCapacityReservation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservation.html",
      "description": "Grants permission to modify a Capacity Reservation's capacity and the conditions under which it is to be released",
      "accessLevel": "Write",
      "resourceTypes": [
        "capacity-reservation*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:CapacityReservationFleet",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyCapacityReservationFleet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservationFleet.html",
      "description": "Grants permission to modify a Capacity Reservation Fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "capacity-reservation-fleet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyClientVpnEndpoint",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyClientVpnEndpoint.html",
      "description": "Grants permission to modify a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*",
        "security-group",
        "vpc"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyDefaultCreditSpecification",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyDefaultCreditSpecification.html",
      "description": "Grants permission to change the account level default credit option for CPU usage of burstable performance instances",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ModifyEbsDefaultKmsKeyId",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyEbsDefaultKmsKeyId.html",
      "description": "Grants permission to change the default customer master key (CMK) for EBS encryption by default for your account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ModifyFleet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
      "description": "Grants permission to modify an EC2 Fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*",
        "image",
        "key-pair",
        "launch-template",
        "network-interface",
        "security-group",
        "snapshot",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:ResourceTag/${TagKey}",
        "ec2:KeyPairName",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyFpgaImageAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFpgaImageAttribute.html",
      "description": "Grants permission to modify an attribute of an Amazon FPGA Image (AFI)",
      "accessLevel": "Write",
      "resourceTypes": [
        "fpga-image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyHosts",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyHosts.html",
      "description": "Grants permission to modify a Dedicated Host",
      "accessLevel": "Write",
      "resourceTypes": [
        "dedicated-host*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyIdFormat",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIdFormat.html",
      "description": "Grants permission to modify the ID format for a resource",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ModifyIdentityIdFormat",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIdentityIdFormat.html",
      "description": "Grants permission to modify the ID format of a resource for a specific principal in your account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ModifyImageAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html",
      "description": "Grants permission to modify an attribute of an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyInstanceAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html",
      "description": "Grants permission to modify an attribute of an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "security-group",
        "volume"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyInstanceCapacityReservationAttributes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCapacityReservationAttributes.html",
      "description": "Grants permission to modify the Capacity Reservation settings for a stopped instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "capacity-reservation"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyInstanceCreditSpecification",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html",
      "description": "Grants permission to modify the credit option for CPU usage on an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyInstanceEventStartTime",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventStartTime.html",
      "description": "Grants permission to modify the start time for a scheduled EC2 instance event",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyInstanceEventWindow",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventWindow.html",
      "description": "Grants permission to modify the specified event window",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance-event-window*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyInstanceMetadataOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html",
      "description": "Grants permission to modify the metadata options for an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyInstancePlacement",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstancePlacement.html",
      "description": "Grants permission to modify the placement attributes for an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*",
        "dedicated-host",
        "placement-group"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyIpam",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpam.html",
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam*"
      ],
      "conditionKeys": [
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyIpamPool",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamPool.html",
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyIpamResourceCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamResourceCidr.html",
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) resource CIDR",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-scope*"
      ],
      "conditionKeys": [
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyIpamScope",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamScope.html",
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) scope",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-scope*"
      ],
      "conditionKeys": [
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyLaunchTemplate",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLaunchTemplate.html",
      "description": "Grants permission to modify a launch template",
      "accessLevel": "Write",
      "resourceTypes": [
        "launch-template*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyManagedPrefixList",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyManagedPrefixList.html",
      "description": "Grants permission to modify a managed prefix list",
      "accessLevel": "Write",
      "resourceTypes": [
        "prefix-list*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyNetworkInterfaceAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyNetworkInterfaceAttribute.html",
      "description": "Grants permission to modify an attribute of a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*",
        "instance",
        "security-group"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyPrivateDnsNameOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyPrivateDnsNameOptions.html",
      "description": "Grants permission to modify the options for instance hostnames for the specified instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:NewInstanceProfile",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyReservedInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyReservedInstances.html",
      "description": "Grants permission to modify attributes of one or more Reserved Instances",
      "accessLevel": "Write",
      "resourceTypes": [
        "reserved-instances*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:InstanceType",
        "ec2:Region",
        "ec2:ReservedInstancesOfferingType",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifySecurityGroupRules",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySecurityGroupRules.html",
      "description": "Grants permission to modify the rules of a security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*",
        "prefix-list",
        "security-group-rule"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifySnapshotAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotAttribute.html",
      "description": "Grants permission to add or remove permission settings for a snapshot",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Add/group",
        "ec2:Add/userId",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:Remove/group",
        "ec2:Remove/userId",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifySnapshotTier",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotTier.html",
      "description": "Grants permission to archive Amazon EBS snapshots",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifySpotFleetRequest",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest.html",
      "description": "Grants permission to modify a Spot Fleet request",
      "accessLevel": "Write",
      "resourceTypes": [
        "spot-fleet-request*",
        "launch-template",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifySubnetAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySubnetAttribute.html",
      "description": "Grants permission to modify an attribute of a subnet",
      "accessLevel": "Write",
      "resourceTypes": [
        "subnet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyTrafficMirrorFilterNetworkServices",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html",
      "description": "Grants permission to allow or restrict mirroring network services",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-filter*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyTrafficMirrorFilterRule",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterRule.html",
      "description": "Grants permission to modify a traffic mirror rule",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-filter*",
        "traffic-mirror-filter-rule*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyTrafficMirrorSession",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorSession.html",
      "description": "Grants permission to modify a traffic mirror session",
      "accessLevel": "Write",
      "resourceTypes": [
        "traffic-mirror-session*",
        "traffic-mirror-filter",
        "traffic-mirror-target"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyTransitGateway",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGateway.html",
      "description": "Grants permission to modify a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway*",
        "transit-gateway-route-table"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyTransitGatewayPrefixListReference",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayPrefixListReference.html",
      "description": "Grants permission to modify a transit gateway prefix list reference",
      "accessLevel": "Write",
      "resourceTypes": [
        "prefix-list*",
        "transit-gateway-route-table*",
        "transit-gateway-attachment"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyTransitGatewayVpcAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayVpcAttachment.html",
      "description": "Grants permission to modify a VPC attachment on a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVolume",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolume.html",
      "description": "Grants permission to modify the parameters of an EBS volume",
      "accessLevel": "Write",
      "resourceTypes": [
        "volume*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVolumeAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolumeAttribute.html",
      "description": "Grants permission to modify an attribute of a volume",
      "accessLevel": "Write",
      "resourceTypes": [
        "volume*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcAttribute.html",
      "description": "Grants permission to modify an attribute of a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcEndpoint",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html",
      "description": "Grants permission to modify an attribute of a VPC endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint*",
        "route-table",
        "security-group",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcEndpointConnectionNotification",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointConnectionNotification.html",
      "description": "Grants permission to modify a connection notification for a VPC endpoint or VPC endpoint service",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint*",
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcEndpointServiceConfiguration",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServiceConfiguration.html",
      "description": "Grants permission to modify the attributes of a VPC endpoint service configuration",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpceServicePrivateDnsName"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcEndpointServicePayerResponsibility",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePayerResponsibility.html",
      "description": "Grants permission to modify the payer responsibility for a VPC endpoint service",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcEndpointServicePermissions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePermissions.html",
      "description": "Grants permission to modify the permissions for a VPC endpoint service",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcPeeringConnectionOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcPeeringConnectionOptions.html",
      "description": "Grants permission to modify the VPC peering connection options on one side of a VPC peering connection",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-peering-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AccepterVpc",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpcTenancy",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcTenancy.html",
      "description": "Grants permission to modify the instance tenancy attribute of a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpnConnection",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnection.html",
      "description": "Grants permission to modify the target gateway of a Site-to-Site VPN connection",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AuthenticationType",
        "ec2:DPDTimeoutSeconds",
        "ec2:GatewayType",
        "ec2:IKEVersions",
        "ec2:InsideTunnelCidr",
        "ec2:InsideTunnelIpv6Cidr",
        "ec2:Phase1DHGroup",
        "ec2:Phase1EncryptionAlgorithms",
        "ec2:Phase1IntegrityAlgorithms",
        "ec2:Phase1LifetimeSeconds",
        "ec2:Phase2DHGroup",
        "ec2:Phase2EncryptionAlgorithms",
        "ec2:Phase2IntegrityAlgorithms",
        "ec2:Phase2LifetimeSeconds",
        "ec2:PreSharedKeys",
        "ec2:Region",
        "ec2:RekeyFuzzPercentage",
        "ec2:RekeyMarginTimeSeconds",
        "ec2:ReplayWindowSizePackets",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RoutingType"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpnConnectionOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnectionOptions.html",
      "description": "Grants permission to modify the connection options for your Site-to-Site VPN connection",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpnTunnelCertificate",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelCertificate",
      "description": "Grants permission to modify the certificate for a Site-to-Site VPN connection",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ModifyVpnTunnelOptions",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelOptions.html",
      "description": "Grants permission to modify the options for a Site-to-Site VPN connection",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpn-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AuthenticationType",
        "ec2:DPDTimeoutSeconds",
        "ec2:GatewayType",
        "ec2:IKEVersions",
        "ec2:InsideTunnelCidr",
        "ec2:InsideTunnelIpv6Cidr",
        "ec2:Phase1DHGroup",
        "ec2:Phase1EncryptionAlgorithms",
        "ec2:Phase1IntegrityAlgorithms",
        "ec2:Phase1LifetimeSeconds",
        "ec2:Phase2DHGroup",
        "ec2:Phase2EncryptionAlgorithms",
        "ec2:Phase2IntegrityAlgorithms",
        "ec2:Phase2LifetimeSeconds",
        "ec2:PreSharedKeys",
        "ec2:Region",
        "ec2:RekeyFuzzPercentage",
        "ec2:RekeyMarginTimeSeconds",
        "ec2:ReplayWindowSizePackets",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RoutingType"
      ],
      "dependentActions": []
    },
    {
      "name": "MonitorInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MonitorInstances.html",
      "description": "Grants permission to enable detailed monitoring for a running instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "MoveAddressToVpc",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MoveAddressToVpc.html",
      "description": "Grants permission to move an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "MoveByoipCidrToIpam",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MoveByoipCidrToIpam.html",
      "description": "Grants permission to move a BYOIP IPv4 CIDR to Amazon VPC IP Address Manager (IPAM) from a public IPv4 pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ProvisionByoipCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionByoipCidr.html",
      "description": "Grants permission to provision an address range for use in AWS through bring your own IP addresses (BYOIP), and to create a corresponding address pool",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ProvisionIpamPoolCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionIpamPoolCidr.html",
      "description": "Grants permission to provision a CIDR to an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ProvisionPublicIpv4PoolCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionPublicIpv4PoolCidr.html",
      "description": "Grants permission to provision a CIDR to a public IPv4 pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*",
        "ipv4pool-ec2"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "PurchaseHostReservation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseHostReservation.html",
      "description": "Grants permission to purchase a reservation with configurations that match those of a Dedicated Host",
      "accessLevel": "Write",
      "resourceTypes": [
        "dedicated-host*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "PurchaseReservedInstancesOffering",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseReservedInstancesOffering.html",
      "description": "Grants permission to purchase a Reserved Instance offering",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "PurchaseScheduledInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseScheduledInstances.html",
      "description": "Grants permission to purchase one or more Scheduled Instances with a specified schedule",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "RebootInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RebootInstances.html",
      "description": "Grants permission to request a reboot of one or more instances",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "RegisterImage",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterImage.html",
      "description": "Grants permission to register an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*",
        "snapshot"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "RegisterInstanceEventNotificationAttributes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterInstanceEventNotificationAttributes.html",
      "description": "Grants permission to add tags to the set of tags to include in notifications about scheduled events for your instances",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "RegisterTransitGatewayMulticastGroupMembers",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupMembers.html",
      "description": "Grants permission to register one or more network interfaces as a member of a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*",
        "transit-gateway-multicast-domain*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "RegisterTransitGatewayMulticastGroupSources",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupSources.html",
      "description": "Grants permission to register one or more network interfaces as a source of a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*",
        "transit-gateway-multicast-domain*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "RejectTransitGatewayMulticastDomainAssociations",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayMulticastDomainAssociations.html",
      "description": "Grants permission to reject requests to associate cross-account subnets with a transit gateway multicast domain",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment",
        "transit-gateway-multicast-domain"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "RejectTransitGatewayPeeringAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayPeeringAttachment.html",
      "description": "Grants permission to reject a transit gateway peering attachment request",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "RejectTransitGatewayVpcAttachment",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayVpcAttachment.html",
      "description": "Grants permission to reject a request to attach a VPC to a transit gateway",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-attachment*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "RejectVpcEndpointConnections",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcEndpointConnections.html",
      "description": "Grants permission to reject one or more VPC endpoint connection requests to a VPC endpoint service",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "RejectVpcPeeringConnection",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcPeeringConnection.html",
      "description": "Grants permission to reject a VPC peering connection request",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-peering-connection*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AccepterVpc",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ReleaseAddress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseAddress.html",
      "description": "Grants permission to release an Elastic IP address",
      "accessLevel": "Write",
      "resourceTypes": [
        "elastic-ip"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ReleaseHosts",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseHosts.html",
      "description": "Grants permission to release one or more On-Demand Dedicated Hosts",
      "accessLevel": "Write",
      "resourceTypes": [
        "dedicated-host*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ReleaseIpamPoolAllocation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html",
      "description": "Grants permission to release an allocation within an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "resourceTypes": [
        "ipam-pool*"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ReplaceIamInstanceProfileAssociation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceIamInstanceProfileAssociation.html",
      "description": "Grants permission to replace an IAM instance profile for an instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:NewInstanceProfile",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": [
        "iam:PassRole"
      ]
    },
    {
      "name": "ReplaceNetworkAclAssociation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html",
      "description": "Grants permission to change which network ACL a subnet is associated with",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-acl*",
        "subnet*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ReplaceNetworkAclEntry",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html",
      "description": "Grants permission to replace an entry (rule) in a network ACL",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-acl*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ReplaceRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html",
      "description": "Grants permission to replace a route within a route table in a VPC",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*",
        "carrier-gateway",
        "egress-only-internet-gateway",
        "instance",
        "internet-gateway",
        "local-gateway",
        "natgateway",
        "network-interface",
        "prefix-list",
        "transit-gateway",
        "vpc-endpoint",
        "vpc-peering-connection",
        "vpn-gateway"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AccepterVpc",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ReplaceRouteTableAssociation",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation.html",
      "description": "Grants permission to change the route table that is associated with a subnet",
      "accessLevel": "Write",
      "resourceTypes": [
        "route-table*",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ReplaceTransitGatewayRoute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceTransitGatewayRoute.html",
      "description": "Grants permission to replace a route in a transit gateway route table",
      "accessLevel": "Write",
      "resourceTypes": [
        "transit-gateway-route-table*",
        "transit-gateway-attachment"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ReportInstanceStatus",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReportInstanceStatus.html",
      "description": "Grants permission to submit feedback about the status of an instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "RequestSpotFleet",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
      "description": "Grants permission to create a Spot Fleet request",
      "accessLevel": "Write",
      "resourceTypes": [
        "spot-fleet-request*",
        "image",
        "key-pair",
        "launch-template",
        "placement-group",
        "security-group",
        "snapshot",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:ResourceTag/${TagKey}",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "RequestSpotInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
      "description": "Grants permission to create a Spot Instance request",
      "accessLevel": "Write",
      "resourceTypes": [
        "spot-instances-request*",
        "image",
        "key-pair",
        "network-interface",
        "placement-group",
        "security-group",
        "snapshot",
        "subnet"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:ResourceTag/${TagKey}",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AuthorizedUser",
        "ec2:AvailabilityZone",
        "ec2:Permission",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "ResetAddressAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetAddressAttribute.html",
      "description": "Grants permission to reset the attribute of the specified IP address",
      "accessLevel": "Write",
      "resourceTypes": [
        "elastic-ip*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AllocationId",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ResetEbsDefaultKmsKeyId",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetEbsDefaultKmsKeyId.html",
      "description": "Grants permission to reset the default customer master key (CMK) for EBS encryption for your account to use the AWS-managed CMK for EBS",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ResetFpgaImageAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetFpgaImageAttribute.html",
      "description": "Grants permission to reset an attribute of an Amazon FPGA Image (AFI) to its default value",
      "accessLevel": "Write",
      "resourceTypes": [
        "fpga-image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "ResetImageAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetImageAttribute.html",
      "description": "Grants permission to reset an attribute of an Amazon Machine Image (AMI) to its default value",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "dependentActions": []
    },
    {
      "name": "ResetInstanceAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetInstanceAttribute.html",
      "description": "Grants permission to reset an attribute of an instance to its default value",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "ResetNetworkInterfaceAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetNetworkInterfaceAttribute.html",
      "description": "Grants permission to reset an attribute of a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "ResetSnapshotAttribute",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetSnapshotAttribute.html",
      "description": "Grants permission to reset permission settings for a snapshot",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "RestoreAddressToClassic",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreAddressToClassic.html",
      "description": "Grants permission to restore an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "RestoreManagedPrefixListVersion",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreManagedPrefixListVersion.html",
      "description": "Grants permission to restore the entries from a previous version of a managed prefix list to a new version of the prefix list",
      "accessLevel": "Write",
      "resourceTypes": [
        "prefix-list*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "RestoreSnapshotFromRecycleBin",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotFromRecycleBin.html",
      "description": "Grants permission to restore an Amazon EBS snapshot from the Recycle Bin",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "RestoreSnapshotTier",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotTier.html",
      "description": "Grants permission to restore an archived Amazon EBS snapshot for use temporarily or permanently, or modify the restore period or restore type for a snapshot that was previously temporarily restored",
      "accessLevel": "Write",
      "resourceTypes": [
        "snapshot*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": []
    },
    {
      "name": "RevokeClientVpnIngress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeClientVpnIngress.html",
      "description": "Grants permission to remove an inbound authorization rule from a Client VPN endpoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "RevokeSecurityGroupEgress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html",
      "description": "Grants permission to remove one or more outbound rules from a VPC security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "RevokeSecurityGroupIngress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html",
      "description": "Grants permission to remove one or more inbound rules from a security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "RunInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
      "description": "Grants permission to launch one or more instances",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*",
        "instance*",
        "network-interface*",
        "security-group*",
        "subnet*",
        "volume*",
        "capacity-reservation",
        "elastic-gpu",
        "elastic-inference",
        "key-pair",
        "launch-template",
        "placement-group",
        "snapshot",
        "SCENARIO:",
        "EC2-Classic-EBS",
        "SCENARIO:",
        "EC2-Classic-InstanceStore",
        "SCENARIO:",
        "EC2-VPC-EBS",
        "SCENARIO:",
        "EC2-VPC-EBS-Subnet",
        "SCENARIO:",
        "EC2-VPC-InstanceStore",
        "SCENARIO:",
        "EC2-VPC-InstanceStore-Subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:RootDeviceType",
        "ec2:Tenancy",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AvailabilityZone",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType",
        "aws:ResourceTag/${TagKey}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:ElasticGpuType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:IsLaunchTemplateResource",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize"
      ],
      "dependentActions": [
        "ec2:CreateTags",
        "image*",
        "instance*",
        "security-group*",
        "volume*",
        "key-pair",
        "placement-group",
        "snapshot",
        "image*",
        "instance*",
        "security-group*",
        "key-pair",
        "placement-group",
        "snapshot",
        "image*",
        "instance*",
        "network-interface*",
        "security-group*",
        "volume*",
        "key-pair",
        "placement-group",
        "snapshot",
        "image*",
        "instance*",
        "network-interface*",
        "security-group*",
        "subnet*",
        "volume*",
        "key-pair",
        "placement-group",
        "snapshot",
        "image*",
        "instance*",
        "network-interface*",
        "security-group*",
        "key-pair",
        "placement-group",
        "snapshot",
        "image*",
        "instance*",
        "network-interface*",
        "security-group*",
        "subnet*",
        "key-pair",
        "placement-group",
        "snapshot"
      ]
    },
    {
      "name": "RunScheduledInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
      "description": "Grants permission to launch one or more Scheduled Instances",
      "accessLevel": "Write",
      "resourceTypes": [
        "image*",
        "key-pair",
        "network-interface",
        "placement-group",
        "security-group",
        "snapshot",
        "subnet"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ImageType",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "aws:ResourceTag/${TagKey}",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthorizedService",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc",
        "aws:ResourceTag/${TagKey}",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotTime",
        "ec2:VolumeSize",
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "SearchLocalGatewayRoutes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchLocalGatewayRoutes.html",
      "description": "Grants permission to search for routes in a local gateway route table",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "SearchTransitGatewayMulticastGroups",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html",
      "description": "Grants permission to search for groups, sources, and members in a transit gateway multicast domain",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "SearchTransitGatewayRoutes",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html",
      "description": "Grants permission to search for routes in a transit gateway route table",
      "accessLevel": "List",
      "resourceTypes": [
        "transit-gateway-route-table*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "SendDiagnosticInterrupt",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SendDiagnosticInterrupt.html",
      "description": "Grants permission to send a diagnostic interrupt to an Amazon EC2 instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "SendSpotInstanceInterruptions",
      "documentationUrl": "https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html#send-spot-instance-interruptions",
      "description": "Grants permission to interrupt a Spot Instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "StartInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html",
      "description": "Grants permission to start a stopped instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "StartNetworkInsightsAccessScopeAnalysis",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAccessScopeAnalysis.html",
      "description": "Grants permission to start a Network Access Scope analysis",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-access-scope"
      ],
      "conditionKeys": [
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "StartNetworkInsightsAnalysis",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAnalysis.html",
      "description": "Grants permission to start analyzing a specified path",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-insights-analysis*",
        "network-insights-path*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ]
    },
    {
      "name": "StartVpcEndpointServicePrivateDnsVerification",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartVpcEndpointServicePrivateDnsVerification.html",
      "description": "Grants permission to start the private DNS verification process for a VPC endpoint service",
      "accessLevel": "Write",
      "resourceTypes": [
        "vpc-endpoint-service*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "dependentActions": []
    },
    {
      "name": "StopInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StopInstances.html",
      "description": "Grants permission to stop an Amazon EBS-backed instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "TerminateClientVpnConnections",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateClientVpnConnections.html",
      "description": "Grants permission to terminate active Client VPN endpoint connections",
      "accessLevel": "Write",
      "resourceTypes": [
        "client-vpn-endpoint*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "dependentActions": []
    },
    {
      "name": "TerminateInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html",
      "description": "Grants permission to shut down one or more instances",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "UnassignIpv6Addresses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignIpv6Addresses.html",
      "description": "Grants permission to unassign one or more IPv6 addresses from a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "UnassignPrivateIpAddresses",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignPrivateIpAddresses.html",
      "description": "Grants permission to unassign one or more secondary private IP addresses from a network interface",
      "accessLevel": "Write",
      "resourceTypes": [
        "network-interface*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "UnmonitorInstances",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html",
      "description": "Grants permission to disable detailed monitoring for a running instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "instance*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "dependentActions": []
    },
    {
      "name": "UpdateSecurityGroupRuleDescriptionsEgress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsEgress.html",
      "description": "Grants permission to update descriptions for one or more outbound rules in a VPC security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "UpdateSecurityGroupRuleDescriptionsIngress",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsIngress.html",
      "description": "Grants permission to update descriptions for one or more inbound rules in a security group",
      "accessLevel": "Write",
      "resourceTypes": [
        "security-group*"
      ],
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "dependentActions": []
    },
    {
      "name": "WithdrawByoipCidr",
      "documentationUrl": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_WithdrawByoipCidr.html",
      "description": "Grants permission to stop advertising an address range that was provisioned for use in AWS through bring your own IP addresses (BYOIP)",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    }
  ]
}