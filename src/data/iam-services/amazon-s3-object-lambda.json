{
  "serviceName": "Amazon S3 Object Lambda",
  "servicePrefix": "s3-object-lambda",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/./list_amazons3objectlambda.html",
  "actions": [
    {
      "name": "AbortMultipartUpload",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html",
      "description": "Grants permission to abort a multipart upload",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteObject",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html",
      "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteObjectTagging",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html",
      "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteObjectVersion",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html",
      "description": "Grants permission to remove a specific version of an object",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": []
    },
    {
      "name": "DeleteObjectVersionTagging",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html",
      "description": "Grants permission to remove the entire tag set for a specific version of the object",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObject",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html",
      "description": "Grants permission to retrieve objects from Amazon S3",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObjectAcl",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html",
      "description": "Grants permission to return the access control list (ACL) of an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObjectLegalHold",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html",
      "description": "Grants permission to get an object's current Legal Hold status",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObjectRetention",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html",
      "description": "Grants permission to retrieve the retention settings for an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObjectTagging",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html",
      "description": "Grants permission to return the tag set of an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObjectVersion",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html",
      "description": "Grants permission to retrieve a specific version of an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObjectVersionAcl",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html",
      "description": "Grants permission to return the access control list (ACL) of a specific object version",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": []
    },
    {
      "name": "GetObjectVersionTagging",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/dev/setting-repl-config-perm-overview.html",
      "description": "Grants permission to return the tag set for a specific version of the object",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": []
    },
    {
      "name": "ListBucket",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html",
      "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
      "accessLevel": "List",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "ListBucketMultipartUploads",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html",
      "description": "Grants permission to list in-progress multipart uploads",
      "accessLevel": "List",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "ListBucketVersions",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectVersions.html",
      "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
      "accessLevel": "List",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "ListMultipartUploadParts",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html",
      "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
      "accessLevel": "List",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "PutObject",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html",
      "description": "Grants permission to add an object to a bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "PutObjectAcl",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html",
      "description": "Grants permission to set the access control list (ACL) permissions for new or existing objects in an S3 bucket.",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "PutObjectLegalHold",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLegalHold.html",
      "description": "Grants permission to apply a Legal Hold configuration to the specified object",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "PutObjectRetention",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectRetention.html",
      "description": "Grants permission to place an Object Retention configuration on an object",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "PutObjectTagging",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html",
      "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "PutObjectVersionAcl",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html",
      "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": []
    },
    {
      "name": "PutObjectVersionTagging",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html",
      "description": "Grants permission to set the supplied tag-set for a specific version of an object",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": []
    },
    {
      "name": "RestoreObject",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html",
      "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    },
    {
      "name": "WriteGetObjectResponse",
      "documentationUrl": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_WriteGetObjectResponse.html",
      "description": "Grants permission to provide data for GetObject requests send to S3 Object Lambda",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": [
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:TlsVersion"
      ],
      "dependentActions": []
    }
  ]
}