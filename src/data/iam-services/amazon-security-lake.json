{
  "serviceName": "Amazon Security Lake",
  "servicePrefix": "securitylake",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/./list_amazonsecuritylake.html",
  "actions": [
    {
      "name": "CreateAwsLogSource",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_CreateAwsLogSource.html",
      "description": "Grants permission to enable any source type in any region for accounts that are either part of a trusted organization or standalone account",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "glue:CreateDatabase",
        "glue:CreateTable",
        "glue:GetDatabase",
        "glue:GetTable",
        "iam:CreateServiceLinkedRole",
        "kms:CreateGrant",
        "kms:DescribeKey"
      ]
    },
    {
      "name": "CreateCustomLogSource",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_CreateCustomLogSource.html",
      "description": "Grants permission to add a custom source",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "glue:CreateCrawler",
        "glue:CreateDatabase",
        "glue:CreateTable",
        "glue:StartCrawlerSchedule",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:PassRole",
        "iam:PutRolePolicy",
        "kms:CreateGrant",
        "kms:DescribeKey",
        "kms:GenerateDataKey",
        "lakeformation:GrantPermissions",
        "lakeformation:RegisterResource",
        "s3:ListBucket",
        "s3:PutObject"
      ]
    },
    {
      "name": "CreateDataLake",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_CreateDataLake.html",
      "description": "Grants permission to create a new security data lake",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [
        "events:PutRule",
        "events:PutTargets",
        "iam:CreateServiceLinkedRole",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:PassRole",
        "iam:PutRolePolicy",
        "kms:CreateGrant",
        "kms:DescribeKey",
        "lakeformation:GetDataLakeSettings",
        "lakeformation:PutDataLakeSettings",
        "lambda:CreateEventSourceMapping",
        "lambda:CreateFunction",
        "organizations:DescribeOrganization",
        "organizations:ListAccounts",
        "organizations:ListDelegatedServicesForAccount",
        "s3:CreateBucket",
        "s3:ListBucket",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketVersioning",
        "sqs:CreateQueue",
        "sqs:GetQueueAttributes",
        "sqs:SetQueueAttributes"
      ]
    },
    {
      "name": "CreateDataLakeExceptionSubscription",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_CreateDataLakeExceptionSubscription.html",
      "description": "Grants permission to get instant notifications about exceptions. Subscribes to the SNS topics for exception notifications",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateDataLakeOrganizationConfiguration",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_CreateDataLakeOrganizationConfiguration.html",
      "description": "Grants permission to automatically enable Amazon Security Lake for new member accounts in your organization",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "CreateSubscriber",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_CreateSubscriber.html",
      "description": "Grants permission to create a subscriber",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [
        "iam:CreateRole",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:PutRolePolicy",
        "lakeformation:GrantPermissions",
        "lakeformation:ListPermissions",
        "lakeformation:RegisterResource",
        "lakeformation:RevokePermissions",
        "ram:GetResourceShareAssociations",
        "ram:GetResourceShares",
        "ram:UpdateResourceShare",
        "s3:PutObject"
      ]
    },
    {
      "name": "CreateSubscriberNotification",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_CreateSubscriberNotification.html",
      "description": "Grants permission to create a webhook invocation to notify a client when there is new data in the data lake",
      "accessLevel": "Write",
      "resourceTypes": [
        "subscriber*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "events:CreateApiDestination",
        "events:CreateConnection",
        "events:DescribeRule",
        "events:ListApiDestinations",
        "events:ListConnections",
        "events:PutRule",
        "events:PutTargets",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:PassRole",
        "s3:GetBucketNotification",
        "s3:PutBucketNotification",
        "sqs:CreateQueue",
        "sqs:DeleteQueue",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:SetQueueAttributes"
      ]
    },
    {
      "name": "DeleteAwsLogSource",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeleteAwsLogSource.html",
      "description": "Grants permission to disable any source type in any region for accounts that are part of a trusted organization or standalone accounts",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeleteCustomLogSource",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeleteCustomLogSource.html",
      "description": "Grants permission to remove a custom source",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "glue:StopCrawlerSchedule"
      ]
    },
    {
      "name": "DeleteDataLake",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeleteDataLake.html",
      "description": "Grants permission to delete security data lake",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "organizations:DescribeOrganization",
        "organizations:ListDelegatedAdministrators",
        "organizations:ListDelegatedServicesForAccount"
      ]
    },
    {
      "name": "DeleteDataLakeExceptionSubscription",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeleteDataLakeExceptionSubscription.html",
      "description": "Grants permission to unsubscribe from SNS topics for exception notifications. Removes exception notifications for the SNS topic",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeleteDataLakeOrganizationConfiguration",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeleteDataLakeOrganizationConfiguration.html",
      "description": "Grants permission to remove the automatic enablement of Amazon Security Lake access for new organization accounts",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "DeleteSubscriber",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeleteSubscriber.html",
      "description": "Grants permission to delete the specified subscriber",
      "accessLevel": "Write",
      "resourceTypes": [
        "subscriber*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "events:DeleteApiDestination",
        "events:DeleteConnection",
        "events:DeleteRule",
        "events:DescribeRule",
        "events:ListApiDestinations",
        "events:ListTargetsByRule",
        "events:RemoveTargets",
        "iam:DeleteRole",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:ListRolePolicies",
        "lakeformation:ListPermissions",
        "lakeformation:RevokePermissions",
        "sqs:DeleteQueue",
        "sqs:GetQueueUrl"
      ]
    },
    {
      "name": "DeleteSubscriberNotification",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeleteSubscriberNotification.html",
      "description": "Grants permission to remove a webhook invocation to notify a client when there is new data in the data lake",
      "accessLevel": "Write",
      "resourceTypes": [
        "subscriber*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "events:DeleteApiDestination",
        "events:DeleteConnection",
        "events:DeleteRule",
        "events:DescribeRule",
        "events:ListApiDestinations",
        "events:ListTargetsByRule",
        "events:RemoveTargets",
        "iam:DeleteRole",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:ListRolePolicies",
        "lakeformation:RevokePermissions",
        "sqs:DeleteQueue",
        "sqs:GetQueueUrl"
      ]
    },
    {
      "name": "DeregisterDataLakeDelegatedAdministrator",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_DeregisterDataLakeDelegatedAdministrator.html",
      "description": "Grants permission to remove the Delegated Administrator account and disable Amazon Security Lake as a service for this organization",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": [
        "organizations:DeregisterDelegatedAdministrator",
        "organizations:DescribeOrganization",
        "organizations:ListDelegatedServicesForAccount"
      ]
    },
    {
      "name": "GetDataLakeExceptionSubscription",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_GetDataLakeExceptionSubscription.html",
      "description": "Grants permission to query the protocol and endpoint that were provided when subscribing to SNS topics for exception notifications",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetDataLakeOrganizationConfiguration",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_GetDataLakeOrganizationConfiguration.html",
      "description": "Grants permission to get an organization’s configuration setting for automatically enabling Amazon Security Lake access for new organization accounts",
      "accessLevel": "Read",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "organizations:DescribeOrganization"
      ]
    },
    {
      "name": "GetDataLakeSources",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_GetDataLakeSources.html",
      "description": "Grants permission to get a static snapshot of the security data lake in the current region. The snapshot includes enabled accounts and log sources",
      "accessLevel": "Read",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "GetSubscriber",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_GetSubscriber.html",
      "description": "Grants permission to get information about subscriber that is already created",
      "accessLevel": "Read",
      "resourceTypes": [
        "subscriber*"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ListDataLakeExceptions",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_ListDataLakeExceptions.html",
      "description": "Grants permission to get the list of all non-retryable failures",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ListDataLakes",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_ListDataLakes.html",
      "description": "Grants permission to list information about the security data lakes",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ListLogSources",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_ListLogSources.html",
      "description": "Grants permission to view the enabled accounts. You can view the enabled sources in the enabled regions",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ListSubscribers",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_ListSubscribers.html",
      "description": "Grants permission to list all subscribers",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "ListTagsForResource",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_ListTagsForResource.html",
      "description": "Grants permission to list all tags for the resource",
      "accessLevel": "List",
      "resourceTypes": [
        "data-lake",
        "subscriber"
      ],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "RegisterDataLakeDelegatedAdministrator",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_RegisterDataLakeDelegatedAdministrator.html",
      "description": "Grants permission to designate an account as the Amazon Security Lake administrator account for the organization",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": [
        "iam:CreateServiceLinkedRole",
        "organizations:DescribeOrganization",
        "organizations:EnableAWSServiceAccess",
        "organizations:ListDelegatedAdministrators",
        "organizations:ListDelegatedServicesForAccount",
        "organizations:RegisterDelegatedAdministrator"
      ]
    },
    {
      "name": "TagResource",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_TagResource.html",
      "description": "Grants permission to add tags to the resource",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "data-lake",
        "subscriber"
      ],
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": []
    },
    {
      "name": "UntagResource",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_UntagResource.html",
      "description": "Grants permission to remove tags from the resource",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "data-lake",
        "subscriber"
      ],
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": []
    },
    {
      "name": "UpdateDataLake",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_UpdateDataLake.html",
      "description": "Grants permission to update a security data lake",
      "accessLevel": "Write",
      "resourceTypes": [
        "data-lake*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "events:PutRule",
        "events:PutTargets",
        "iam:CreateServiceLinkedRole",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:PutRolePolicy",
        "kms:CreateGrant",
        "kms:DescribeKey",
        "lakeformation:GetDataLakeSettings",
        "lakeformation:PutDataLakeSettings",
        "lambda:CreateEventSourceMapping",
        "lambda:CreateFunction",
        "organizations:DescribeOrganization",
        "organizations:ListDelegatedServicesForAccount",
        "s3:CreateBucket",
        "s3:ListBucket",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketVersioning",
        "sqs:CreateQueue",
        "sqs:GetQueueAttributes",
        "sqs:SetQueueAttributes"
      ]
    },
    {
      "name": "UpdateDataLakeExceptionSubscription",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_UpdateDataLakeExceptionSubscription.html",
      "description": "Grants permission to update subscriptions to the SNS topics for exception notifications",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": [],
      "dependentActions": []
    },
    {
      "name": "UpdateSubscriber",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_UpdateSubscriber.html",
      "description": "Grants permission to update subscriber",
      "accessLevel": "Write",
      "resourceTypes": [
        "subscriber*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "events:CreateApiDestination",
        "events:CreateConnection",
        "events:DescribeRule",
        "events:ListApiDestinations",
        "events:ListConnections",
        "events:PutRule",
        "events:PutTargets",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:PutRolePolicy"
      ]
    },
    {
      "name": "UpdateSubscriberNotification",
      "documentationUrl": "https://docs.aws.amazon.com/security-lake/latest/APIReference/API_UpdateSubscriberNotification.html",
      "description": "Grants permission to update a webhook invocation to notify a client when there is new data in the data lake",
      "accessLevel": "Write",
      "resourceTypes": [
        "subscriber*"
      ],
      "conditionKeys": [],
      "dependentActions": [
        "events:CreateApiDestination",
        "events:CreateConnection",
        "events:DescribeRule",
        "events:ListApiDestinations",
        "events:ListConnections",
        "events:PutRule",
        "events:PutTargets",
        "iam:CreateServiceLinkedRole",
        "iam:DeleteRolePolicy",
        "iam:GetRole",
        "iam:PassRole",
        "iam:PutRolePolicy",
        "s3:CreateBucket",
        "s3:GetBucketNotification",
        "s3:ListBucket",
        "s3:PutBucketNotification",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketVersioning",
        "s3:PutLifecycleConfiguration",
        "sqs:CreateQueue",
        "sqs:DeleteQueue",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:SetQueueAttributes"
      ]
    }
  ]
}